{"version":3,"sources":["webpack:///./screens/HomeScreen/Override.css?092f","screens/HomeScreen/Override.css","config/native-base.ts","constants/index.ts","components/ChartExamples/utils.ts","components/ChartExamples/PieChart.tsx","components/ChartExamples/RadarChart.tsx","components/ChartExamples/BarChart.tsx","components/ChartExamples/HalfPieChart.tsx","components/ChartExamples/GaugeChart/lib2/core/util/index.js","components/ChartExamples/GaugeChart/lib2/core/enums.js","components/ChartExamples/GaugeChart/lib2/core/config/index.js","components/ChartExamples/GaugeChart/lib2/core/config/configure.js","components/ChartExamples/GaugeChart/lib2/core/render/index.js","components/ChartExamples/GaugeChart/lib2/core/util/get-needle-transition.js","components/ChartExamples/GaugeChart/lib2/index.js","components/ChartExamples/Speedometer.tsx","components/IconSet.tsx","components/JSONEditor/index.tsx","components/Lottie.tsx","components/Paper.tsx","components/ScreenContainer.tsx","utils/index.tsx","components/TextBox.tsx","screens/HomeScreen/Override.tsx","screens/HomeScreen/index.tsx","App.tsx","hooks/useInitializer.ts"],"names":["api","content","__esModule","default","module","i","options","exports","locals","___CSS_LOADER_API_IMPORT___","push","colorModeManager","get","a","async","AsyncStorage","getItem","val","set","value","setItem","console","log","NATIVE_BASE_CONFIG","dependencies","require","LinearGradient","theme","extendTheme","config","initialColorMode","colors","primary","50","100","200","300","400","500","600","700","800","900","components","Button","baseStyle","defaultProps","variants","linearGradient","p","_stack","bg","start","end","rounded","BRAND_COLORS_MAP","blue","orange","lightBlue","cream","grean","BRAND_COLORS","Object","values","sort","KEYS","useChartTheme","country","useTheme","colorMode","useColorMode","background","textColor","fontSize","axis","domain","line","stroke","strokeWidth","ticks","grid","props","data","chartTheme","datum","margin","top","right","bottom","left","innerRadius","padAngle","cornerRadius","activeOuterRadiusOffset","borderWidth","borderColor","from","modifiers","arcLinkLabelsSkipAngle","arcLinkLabelsThickness","arcLinkLabelsColor","arcLabelsSkipAngle","arcLabelsTextColor","defs","id","type","color","size","padding","stagger","rotation","lineWidth","spacing","fill","match","keys","indexBy","maxValue","curve","gridLabel","LabelComponent","gridLevels","gridShape","gridLabelOffset","enableDots","dotSize","dotColor","dotBorderWidth","dotBorderColor","enableDotLabel","dotLabel","dotLabelYOffset","params","index","fillOpacity","animate","motionConfig","isInteractive","anchor","transform","y","style","fontWeight","height","labelTextColor","labelSkipWidth","labelSkipHeight","c","layout","enableGridY","enableGridX","markers","lineStyle","strokeDasharray","legend","legendOrientation","legendPosition","startAngle","endAngle","legends","direction","translateX","translateY","itemWidth","itemHeight","itemTextColor","symbolSize","symbolShape","sumArrayTill","array","_sum","_take","calculateSegmentLabelCount","maxSegmentLabelCount","segmentCount","max_segment_label_count","parseInt","segments_count","_isNumber","deg2rad","deg","Math","PI","Transition","DEFAULT_PROPS","minValue","forceRender","width","paddingHorizontal","paddingVertical","fluidWidth","dimensionUnit","segments","maxSegmentLabels","customSegmentStops","customSegmentLabels","needleColor","startColor","endColor","segmentColors","needleTransition","needleTransitionDuration","needleHeightRatio","ringWidth","valueFormat","currentValueText","currentValuePlaceholderStyle","labelFontSize","valueTextFontSize","valueTextFontWeight","DEFAULT_CONFIG","ringInset","pointerWidth","pointerTailLength","minAngle","maxAngle","labelInset","configureScale","memoizeOne","min","max","d3ScaleLinear","range","calculateScale","configureTicks","scale","_last","length","diff","_times","calculateTicks","configureTickData","tickData","isArray","isEmpty","relative_difference","map","current_stop","_drop","calculateSegmentStops","d3Range","majorTicks","d","configureArc","r","d3Arc","outerRadius","ratio","update","d3_refs","newValue","pointer","item","needle","needles","newAngle","transition","duration","ease","d3EaseLinear","d3EaseQuadIn","d3EaseQuadOut","d3EaseQuadInOut","d3EaseCubicIn","d3EaseCubicOut","d3EaseCubicInOut","d3EasePolyIn","d3EasePolyOut","d3EasePolyInOut","d3EaseSinIn","d3EaseSinOut","d3EaseSinInOut","d3EaseExpIn","d3EaseExpOut","d3EaseExpInOut","d3EaseCircleIn","d3EaseCircleOut","d3EaseCircleInOut","d3EaseBounceIn","d3EaseBounceOut","d3EaseBounceInOut","d3EaseBackIn","d3EaseBackOut","d3EaseBackInOut","d3EaseElasticIn","d3EaseElasticOut","d3EaseElasticInOut","d3EaseElastic","warn","getNeedleTransition","attr","current_value_text","text","currentValue","labelFormat","placeholderStyle","replace","formatCurrentValueText","render","container","getRadius","centerTx","centerTranslation","svg","d3Select","append","_renderSVG","arc","selectAll","enter","arcColorFn","_renderArcs","labelsEnabled","isCustomLabelsPresent","isCustomLabelsValid","Error","lg","updatedConfig","label","needleLabelFontSize","renderNeedleLabels","_calculateAngle","newAngles","curr_index","next_index","angle1","position","outerText","innerText","_renderCustomSegmentLabels","_renderLabels","needleProps","_renderCurrentValueText","needleLength","heightRatio","radius","round","calculateNeedleHeight","lineData","pointerLine","d3Line","d3CurveMonotoneX","_renderNeedle","ReactSpeedometer","ref","gaugeDiv","this","renderGauge","updateReadings","PROPS","parentWidth","parentHeight","d3ScaleQuantize","d3InterpolateHsl","d3Rgb","d3Format","assign","getConfig","parentNode","clientWidth","clientHeight","select","remove","PureComponent","displayName","secondSegments","React","useMemo","R","acc","arcsLength","total","secondArcsLength","secondSegmentColors","useLayout","onLayout","initialized","backgroundColor","zIndex","flexDirection","alignItems","borderRadius","mr","mb","StyleSheet","absoluteFillObject","MARGIN","IconSet","forwardRef","forwardedRef","rest","as","MaterialCommunityIcons","JSONEditor","onChange","htmlElementProps","ace","RESIZE_MODE","center","contain","cover","Lottie","wrapComponent","loop","source","uri","autoPlay","resizeMode","animationRef","useForwardRef","useEffect","current","destroy","animationContainerNode","document","getElementById","animation","lottie","renderer","autoplay","path","animationData","rendererSettings","preserveAspectRatio","View","nativeID","isForwardRef","Paper","children","_light","_dark","ScrollView","contentContainerStyle","flexGrow","ScreenContainer","scrollable","hasKeyboardAvoidingView","isLoading","Container","KeyboardAvoidingView","Fragment","justifyContent","flex","safeArea","readTextFile","blob","encoding","Promise","res","rej","reader","FileReader","addEventListener","result","error","readAsText","TextBox","py","px","textAlign","combineMerge","target","destination","slice","forEach","cloneUnlessOtherwiseSpecified","isMergeableObject","merge","indexOf","val2","deepmerge","arrayMerge","OverrideHTML","containerID","fetch","innerHTML","chartList","pageIndex","pageNode","getElementsByClassName","image","getElementsByTagName","chart","chartIndex","bindChart","Bind","chartData","chartType","extraElements","chartContainer","createElement","chartWrapper","appendChild","extraElement","chartExtraContainer","insertBefore","nextElementSibling","ReactDOM","component","Chart","ChartExamples","w","h","call","overflow","RADAR_CHART_KEYS","SPEEDOMETER_SEGMENTS_BIND","SPEEDOMETER_SECOND_SEGMENTS","SPEEDOMETER_VALUES_BIND","SEGMENTS","BARCHART_VALUES_BIND","0","1","2","HomeScreen","b","toast","useToast","initialData","useWindowDimensions","urlSearchParams","URLSearchParams","window","location","search","fromEntries","entries","JSON","parse","useImmer","status","formVisible","toggleColorMode","onCreateCharts","useBreakpointValue","base","md","useCallback","DocumentPicker","file","fileText","draft","setTimeout","show","title","description","stringify","onShare","link","origin","pathname","jsonToQuery","Clipboard","onUpdateData","scrollWidth","scrollHeight","html2canvas","windowWidth","windowHeight","toBlob","open","URL","createObjectURL","download","name","formData","space","onPress","obj","str","hasOwnProperty","encodeURIComponent","join","App","isLoadingComplete","setLoadingComplete","SplashScreen","e","useInitializer","StatusBar"],"mappings":"+FAAA,IAAIA,EAAM,EAAQ,KACFC,EAAU,EAAQ,MAIC,kBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAEPN,EAAIC,EAASK,GAI1BF,EAAOG,QAAUN,EAAQO,QAAU,I,sBChBnCD,EADkC,EAAQ,IAChCE,EAA4B,IAE9BC,KAAK,CAACN,EAAOC,EAAI,24PAA44P,KAEr6PD,EAAOG,QAAUA,G,2XCAJI,EAAmC,CAC9CC,IAAK,0BAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAEiBE,IAAaC,QAAQ,gBAFtC,cAEKC,EAFL,yBAGc,SAARA,EAAiB,OAAS,SAHhC,yDAKM,SALN,iEAQLC,IAAK,SAAOC,GAAP,SAAAN,EAAAC,OAAA,2EAAAD,EAAA,MAEKE,IAAaK,QAAQ,cAAeD,IAFzC,sDAIDE,QAAQC,IAAR,MAJC,iEASMC,EAAqB,CAChCC,aAAc,CACZ,kBAAmBC,EAAQ,MAAwBC,gBAErDC,MAAOC,sBAAY,CACjBC,OAAQ,CAAEC,iBAAkB,QAC5BC,OAAQ,CACNC,QAAS,CACPC,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,YAGTC,WAAY,CACVC,OAAQ,CAENC,UAAW,GAGXC,aAAc,GAGdC,SAAU,CACRC,eAAgB,iBAAO,CACrBC,EAAG,EACHC,OAAQ,CACND,EAAG,EACHE,GAAI,CACFH,eAAgB,CACdjB,OAAQ,CAAC,aAAc,iBACvBqB,MAAO,CAAC,EAAG,GACXC,IAAK,CAAC,EAAG,KAGbC,QAAS,MAEXA,QAAS,a,yFCnERC,EAAmB,CAC9BC,KAAM,UACNC,OAAQ,UACRC,UAAW,UACXC,MAAO,qBACPC,MAAO,WAQIC,EAAeC,OAAOC,OAAOR,GAAkBS,OAE/CC,EAAO,CAAC,QAAS,gCAAiC,oCCblDC,GDsBQL,EAAa,GAKbA,EAAa,GAKbA,EAAa,GAOnBA,EAAa,GAKbA,EAAa,GAKbA,EAAa,GASfA,EAAa,GAMbA,EAAa,GAMbA,EAAa,GAGZ,WAEPI,EAAK,GAAK,IAFH,MAGPA,EAAK,GAAK,IAHH,MAIPA,EAAK,GAAK,IAJH,cAKDJ,EAAa,IALZ,WAQPI,EAAK,GAAK,IARH,MASPA,EAAK,GAAK,IATH,MAUPA,EAAK,GAAK,IAVH,cAWDJ,EAAa,IAXZ,WAcPI,EAAK,GAAK,IAdH,MAePA,EAAK,GAAK,IAfH,MAgBPA,EAAK,GAAK,IAhBH,cAiBDJ,EAAa,IAGd,GAENM,QAAS,MAFH,MAGLF,EAAK,GAAK,IAHL,MAIFA,EAAK,GAJH,QAIeJ,EAAa,IAJ5B,MAKLI,EAAK,GAAK,KALL,MAMFA,EAAK,GANH,QAMeJ,EAAa,IAN5B,MAOLI,EAAK,GAAK,IAPL,MAQFA,EAAK,GARH,QAQeJ,EAAa,IAQ3BA,EAAa,GAMbA,EAAa,GAMbA,EAAa,GCzHG,WAC3B,IAAMlC,EAAQyC,qBACNC,EAAcC,yBAAdD,UACR,MAAO,CACL,CACEE,WAAY5C,EAAMI,OAAOsC,GAAW,IACpCG,UAAW7C,EAAMI,OAAOsC,GAAW,KACnCI,SAAU,GACVC,KAAM,CACJC,OAAQ,CACNC,KAAM,CACJC,OAAQlD,EAAMI,OAAOsC,GAAW,KAChCS,YAAa,IAGjBC,MAAO,CACLH,KAAM,CACJC,OAAQlD,EAAMI,OAAOsC,GAAW,KAChCS,YAAa,KAInBE,KAAM,CACJJ,KAAM,CACJC,OAAQlD,EAAMI,OAAOsC,GAAW,KAChCS,YAAa,KAInBT,KC1BW,GDoCaP,OAAOC,OANH,CAC9BP,KAAM,UACNC,OAAQ,UACRC,UAAW,YAG+CM,OCpC7C,SAACiB,GACd,IAAQC,EAASD,EAATC,KACR,EAAqBhB,IAAdiB,EAAP,YACA,OACE,kBAAC,IAAD,CACED,KAAMA,EACNvD,MAAOwD,EACPpD,OAAQ,CAAEqD,MAAO,cACjBC,OAAQ,CACNC,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAExCC,YAAa,GACbC,SAAU,GACVC,aAAc,EACdC,wBAAyB,EACzBC,YAAa,EACbC,YAAa,CAAEC,KAAM,QAASC,UAAW,CAAC,CAAC,SAAU,MACrDC,uBAAwB,GACxBC,uBAAwB,EACxBC,mBAAoB,CAAEJ,KAAM,SAC5BK,mBAAoB,GACpBC,mBAAoB,CAAE3E,MAAO,oBAE7B4E,KAAM,CACJ,CACEC,GAAI,OACJC,KAAM,cACNlC,WAAY,UACZmC,MAAO,2BACPC,KAAM,EACNC,QAAS,EACTC,SAAS,GAEX,CACEL,GAAI,QACJC,KAAM,eACNlC,WAAY,UACZmC,MAAO,2BACPI,UAAW,GACXC,UAAW,EACXC,QAAS,KAGbC,KAAM,CACJ,CACEC,MAAO,CACLV,GAAI,QAENA,GAAI,QAEN,CACEU,MAAO,CACLV,GAAI,KAENA,GAAI,QAEN,CACEU,MAAO,CACLV,GAAI,MAENA,GAAI,QAEN,CACEU,MAAO,CACLV,GAAI,UAENA,GAAI,QAEN,CACEU,MAAO,CACLV,GAAI,SAENA,GAAI,SAEN,CACEU,MAAO,CACLV,GAAI,QAENA,GAAI,SAEN,CACEU,MAAO,CACLV,GAAI,UAENA,GAAI,SAEN,CACEU,MAAO,CACLV,GAAI,cAENA,GAAI,c,GAwDH3C,EAAa,GAMbA,EAAa,GAMbA,EAAa,G,QC9JT,WAACoB,GACd,IAAQkC,EAAuBlC,EAAvBkC,KAAMjC,EAAiBD,EAAjBC,KAAMnD,EAAWkD,EAAXlD,OACpB,EAAqBmC,IAAdiB,EAAP,YACA,OACE,kBAAC,IAAD,CACED,KAAMA,EACNvD,MAAOwD,EACPgC,KAAMA,EACNC,QAAQ,OACRC,SAAS,OACThC,OAAQ,CACNC,IAAK,GAAIC,MAAO,IAAKC,OAAQ,GAAIC,KAAM,KAEzC6B,MAAM,eACNC,UAAWC,EACX1B,YAAa,EACbC,YAAa,CAAEC,KAAM,SACrByB,WAAY,EACZC,UAAU,WACVC,gBAAiB,GACjBC,YAAU,EACVC,QAAS,GACTC,SAAU,CAAEnG,MAAO,cACnBoG,eAAgB,EAChBC,eAAgB,CAAEhC,KAAM,SACxBiC,gBAAc,EACdC,SAAS,QACTC,iBAAkB,GAClBpG,OAAQ,SAACqG,GACP,IACEC,EACED,EADFC,MAEF,OAAOtG,EAAOsG,IAEhBC,YAAa,GAEbC,SAAO,EACPC,aAAa,SACbC,eAAa,KAgDbjB,GArBO,WAERvD,EAAK,GAAK,IAFF,MAGRA,EAAK,GAAK,IAHF,MAIRA,EAAK,GAAK,IAJF,cAKFJ,EAAa,IALX,WAQRI,EAAK,GAAK,IARF,MASRA,EAAK,GAAK,IATF,MAURA,EAAK,GAAK,IAVF,cAWFJ,EAAa,IAXX,WAcRI,EAAK,GAAK,IAdF,MAeRA,EAAK,GAAK,IAfF,MAgBRA,EAAK,GAAK,IAhBF,cAiBFJ,EAAa,IAID,SAAC,GAAD,IAAG2C,EAAH,EAAGA,GAAIkC,EAAP,EAAOA,OAAP,OACrB,uBAAGC,UAAS,cAA0B,QAAXD,GAAoB,GAAgB,WAAXA,GAAuB,GAAK,GAApE,UACV,8BAAOlC,GACP,0BACEoC,EAAG,GACHC,MAAO,CACLpE,SAAU,GACVqE,WAAY,OACZ7B,KAAM,gB,SC9FC,WAAChC,GACd,IAAQkC,EAAsBlC,EAAtBkC,KAAMjC,EAAgBD,EAAhBC,KAAM/D,EAAU8D,EAAV9D,MACpB,EAAqB+C,IAAdiB,EAAP,YACA,OACE,kBAAC,IAAD,CAEE4D,OAAQ,IACR1D,OAAQ,CACNC,IAAK,GAAIC,MAAO,IAAKC,OAAQ,GAAIC,KAAM,IAEzCP,KAAMA,EACNvD,MAAOwD,EAEPiC,QAAQ,OACRD,KAAMA,EACNP,QAAS,GAEToC,eAAgB,CAAEhD,KAAM,QAASrE,MAAO,oBACxCsH,eAAgB,GAChBC,gBAAiB,GACjBnH,OAAQ,SAACoH,GACP,IACE3C,EACE2C,EADF3C,GAEF,OADI2C,EADEjE,KAESsB,EAAJ,UAEb4C,OAAO,aACPC,aAAa,EACbC,aAAW,EAuBXC,QAAS,CACP,CACE7E,KAAM,IACNvD,QACAqI,UAAW,CACT3E,OAAQtB,EAAiBE,OACzBqB,YAAa,EACb2E,gBAAiB,SAEnBC,OAAQ,GACRC,kBAAmB,aACnBC,eAAgB,WC9DX,GDqEF,WAGR3F,EAAK,GAAK,IAHF,MAILA,EAAK,GAJA,QAIYJ,EAAa,IAJzB,MAKRI,EAAK,GAAK,KALF,MAMLA,EAAK,GANA,QAMYJ,EAAa,IANzB,MAORI,EAAK,GAAK,IAPF,MAQLA,EAAK,GARA,QAQYJ,EAAa,IC7EvB,SAACoB,GACd,IAAQC,EAASD,EAATC,KACR,EAAqBhB,IAAdiB,EAAP,YACA,OACE,kBAAC,IAAD,CACED,KAAMA,EACNvD,MAAOwD,EACPpD,OAAQ,CAAEqD,MAAO,cACjBC,OAAQ,CACNC,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAExCoE,WAAY,GACZC,UAAW,GACXpE,YAAa,GACbC,SAAU,GACVC,aAAc,EACdC,wBAAyB,EACzBC,YAAa,EACbC,YAAa,CAAEC,KAAM,QAASC,UAAW,CAAC,CAAC,SAAU,MACrDC,uBAAwB,GACxBC,uBAAwB,EACxBC,mBAAoB,CAAEJ,KAAM,SAC5BK,mBAAoB,GAEpBC,mBAAoB,CAAE3E,MAAO,oBAC7B4E,KAAM,CACJ,CACEC,GAAI,OACJC,KAAM,cACNlC,WAAY,UACZmC,MAAO,2BACPC,KAAM,EACNC,QAAS,EACTC,SAAS,GAEX,CACEL,GAAI,QACJC,KAAM,eACNlC,WAAY,UACZmC,MAAO,2BACPI,UAAW,GACXC,UAAW,EACXC,QAAS,KAGbC,KAAM,CACJ,CACEC,MAAO,CACLV,GAAI,QAENA,GAAI,QAEN,CACEU,MAAO,CACLV,GAAI,KAENA,GAAI,QAEN,CACEU,MAAO,CACLV,GAAI,MAENA,GAAI,QAEN,CACEU,MAAO,CACLV,GAAI,UAENA,GAAI,QAEN,CACEU,MAAO,CACLV,GAAI,SAENA,GAAI,SAEN,CACEU,MAAO,CACLV,GAAI,QAENA,GAAI,SAEN,CACEU,MAAO,CACLV,GAAI,UAENA,GAAI,SAEN,CACEU,MAAO,CACLV,GAAI,cAENA,GAAI,UAGRuD,QAAS,CACP,CACErB,OAAQ,WACRsB,UAAW,SACXC,YAAa,GACbC,YAAa,GACbC,UAAW,GACXC,WAAY,GACZC,cAAe,OACfC,WAAY,GACZC,YAAa,e,GAoBZ1G,EAAa,GAMbA,EAAa,GAMbA,EAAa,G,qMCjIjB,SAAS2G,GAAaC,EAAOpC,GAClC,OAAOqC,aAAKC,aAAMF,EAAOpC,IAyDpB,SAASuC,GAAT,GAGH,IAFFC,EAEC,EAFDA,qBACAC,EACC,EADDA,aAEMC,EAA0BC,SAASH,EAAsB,IACzDI,EAAiBD,SAASF,EAAc,IAE9C,OAAOI,aAAUH,IACfA,GAA2B,GAC3BA,GAA2BE,EACzBF,EACAE,EA8CC,SAASE,GAAQC,GACtB,OAAQA,EAAMC,KAAKC,GAAM,ICjIpB,IAKMC,GACC,aADDA,GAEC,aAFDA,GAGE,cAHFA,GAII,gBAJJA,GAKE,cALFA,GAMG,eANHA,GAOK,iBAPLA,GAQC,aARDA,GASE,cATFA,GAUI,gBAVJA,GAWA,YAXAA,GAYC,aAZDA,GAaG,eAbHA,GAcA,YAdAA,GAeC,aAfDA,GAgBG,eAhBHA,GAiBG,eAjBHA,GAkBI,gBAlBJA,GAmBM,kBAnBNA,GAoBG,eApBHA,GAqBI,gBArBJA,GAsBM,kBAtBNA,GAuBC,aAvBDA,GAwBE,cAxBFA,GAyBI,gBAzBJA,GA0BI,gBA1BJA,GA2BK,iBA3BLA,GA4BO,mBA5BPA,GA6BE,c,qkBCxBR,IAAMC,GAAgB,CAC3BrK,MAAO,EACPsK,SAAU,EACVpE,SAAU,IAEVqE,aAAa,EAEbC,MAAO,IACP5C,OAAQ,IACR6C,kBAAmB,EACnBC,gBAAiB,EAEjBC,YAAY,EACZC,cAAe,KAGfC,SAAU,EAEVC,kBAAmB,EACnBC,mBAAoB,GAGpBC,oBAAqB,GAGrBC,YAAa,YACbC,WAAY,UACZC,SAAU,UAEVC,cAAe,GAIfC,iBAAkBjB,GAClBkB,yBAA0B,IAC1BC,kBAAmB,GAEnBC,UAAW,GAGXnI,UAAW,OAIXoI,YAAa,GAIbC,iBAAkB,WAGlBC,6BAA8B,WAG9BC,cAAe,OACfC,kBAAmB,OACnBC,oBAAqB,QAIjBC,GAAiB,CACrBC,UAAW,GAEXC,aAAc,GACdC,kBAAmB,EAEnBC,UAAW,GACXC,SAAU,GAEVC,WAAY,I,cCpEDC,GAAiBC,cAK9B,SAAyB7L,GACvB,OHqEK,YAAiD,IAAvB8L,EAAsB,EAAtBA,IAAKC,EAAiB,EAAjBA,IACpC,OADqD,EAAZ5B,SAClC6B,cAAgBC,MAAM,CAAC,EAAG,IAAInJ,OAAO,CAACgJ,EAAKC,IGtE3CG,CAAe,CACpBJ,IAAK9L,EAAO4J,SACZmC,IAAK/L,EAAOwF,SACZ2E,SAAUnK,EAAOoK,sBARR+B,GAAiBN,cAY9B,SAAyB7L,GACvB,IAEIkD,EHgEC,SAAwBkJ,EAAxB,GAAwD,IAAvBN,EAAsB,EAAtBA,IAAKC,EAAiB,EAAjBA,IAAK5B,EAAY,EAAZA,SAC5CjH,EAAQ,GAOZ,GANAA,EAAQkJ,EAAMlJ,MAAMiH,IAIjBkC,aAAMnJ,KAAW6I,GAAO5B,EAAWjH,EAAMoJ,SAAWpJ,EAAMoJ,OAAS,EAEjD,CAEnB,IAAMC,GAAQR,EAAMD,GAAO3B,EAC3BjH,EAAQ,CAAC4I,GACTU,aAAOrC,GAAU,SAAA3L,GACf0E,EAAMrE,KAAKiN,GAAOtN,EAAI,GAAK+N,MAS/B,OALqB,IAAjBrJ,EAAMoJ,SAERpJ,EAAQ,CAAC4I,EAAKC,IAGT7I,EGtFKuJ,CAFEb,GAAe5L,GAEK,CAChC8L,IAAK9L,EAAO4J,SACZmC,IAAK/L,EAAOwF,SACZ2E,SAAUnK,EAAOoK,mBAGfpK,EAAOqK,mBAAmBiC,OAAS,GAAiC,IAA5BtM,EAAOoK,mBACjDlH,EAAQlD,EAAOqK,oBAGjB,OAAOnH,KAxBIwJ,GAAoBb,cA2BjC,SAA4B7L,GAY1B,OH7BK,YAKH,IAJF2M,EAIC,EAJDA,SACAtC,EAGC,EAHDA,mBACAyB,EAEC,EAFDA,IACAC,EACC,EADDA,IAEA,IAAKa,aAAQvC,IAAuBwC,aAAQxC,GAE1C,OAAOsC,EAqBT,IAAMG,EAAsBzC,EAAmB0C,KAAI,SAACC,EAAcxG,GAChE,GAAc,IAAVA,EAIJ,OAAQwG,EAAe3C,EAAmB7D,EAAQ,KAAOuF,EAAMD,MAGjE,OAAOmB,aAAMH,GGfII,CAAsB,CACrCP,SALsBQ,YAAQnN,EAAOoN,YAAYL,KAAI,SAAAM,GACrD,OAAO,EAAIrN,EAAOoN,cAKlB/C,mBAAoBrK,EAAOqK,mBAC3ByB,IAAK9L,EAAO4J,SACZmC,IAAK/L,EAAOwF,cAnCH8H,GAAezB,cAyC5B,SAAuB7L,GACrB,IAAM2M,EAAWD,GAAkB1M,GAE7BiM,EAAQjM,EAAO0L,SAAW1L,EAAOyL,SACjC8B,EAAIvN,EAAO8J,MAAQ,EAczB,OAZY0D,cACT3J,YAAY0J,EAAIvN,EAAO8K,UAAY9K,EAAOsL,WAC1CmC,YAAYF,EAAIvN,EAAOsL,WACvBtD,YAAW,SAACqF,EAAG7O,GACd,IAAMkP,EAAQ/E,GAAagE,EAAUnO,GACrC,OAAO8K,GAAQtJ,EAAOyL,SAAWiC,EAAQzB,MAE1ChE,UAAS,SAACoF,EAAG7O,GACZ,IAAMkP,EAAQ/E,GAAagE,EAAUnO,EAAI,GACzC,OAAO8K,GAAQtJ,EAAOyL,SAAWiC,EAAQzB,S,qkBC9CxC,IAAM0B,GAAS,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,SAAU7N,EAAa,EAAbA,OACpCoM,EAAQR,GAAe5L,GACvBiM,EAAQjM,EAAO0L,SAAW1L,EAAOyL,SAGvCmC,EAAQE,QAAQf,KAAI,SAACgB,EAAMvP,GACzB,IAAMwP,EAAShO,EAAOiO,QAAQzP,GACxBkP,EAAQtB,EAAM4B,EAAO1O,OACrB4O,EAAWlO,EAAOyL,SAAWiC,EAAQzB,EAC3C8B,EACGI,aACAC,SAASpO,EAAO4K,0BAChByD,KCAA,SAA6BF,GAClC,OAAQA,GAEN,KAAKzE,GACH,OAAO4E,IAET,KAAK5E,GACH,OAAO6E,IAET,KAAK7E,GACH,OAAO8E,IAET,KAAK9E,GACH,OAAO+E,IAET,KAAK/E,GACH,OAAOgF,IAET,KAAKhF,GACH,OAAOiF,IAET,KAAKjF,GACH,OAAOkF,IAET,KAAKlF,GACH,OAAOmF,IAET,KAAKnF,GACH,OAAOoF,IAET,KAAKpF,GACH,OAAOqF,IAET,KAAKrF,GACH,OAAOsF,IAET,KAAKtF,GACH,OAAOuF,IAET,KAAKvF,GACH,OAAOwF,IAET,KAAKxF,GACH,OAAOyF,IAET,KAAKzF,GACH,OAAO0F,IAET,KAAK1F,GACH,OAAO2F,IAET,KAAK3F,GACH,OAAO4F,IAET,KAAK5F,GACH,OAAO6F,IAET,KAAK7F,GACH,OAAO8F,IAET,KAAK9F,GACH,OAAO+F,IAET,KAAK/F,GACH,OAAOgG,IAET,KAAKhG,GACH,OAAOiG,IAET,KAAKjG,GACH,OAAOkG,IAET,KAAKlG,GACH,OAAOmG,IAET,KAAKnG,GACH,OAAOoG,IAET,KAAKpG,GACH,OAAOqG,IAET,KAAKrG,GACH,OAAOsG,IAET,KAAKtG,GACH,OAAOuG,IAET,KAAKvG,GACH,OAAOwG,IAGT,QAIE,OAHA1Q,QAAQ2Q,KAAR,uCACyChC,EADzC,sDAGOM,KD/FD2B,CAAoBpQ,EAAO2K,mBAChC0F,KAAK,YAJR,UAI+BnC,EAJ/B,QAOFN,EAAQ0C,mBAAmBvD,KAAI,SAACgB,GAAD,OAAUA,EAAKwC,KJ8EzC,SAAgCC,EAAcxQ,GAEnD,IAAMV,EAAQU,EAAOyQ,YAAYD,GAE3BE,EAAmB1Q,EAAOiL,6BAGhC,OAAOjL,EAAOgL,iBAAiB2F,QAAQD,EAAkBpR,GIrFNsR,CAAuB/C,EAAU7N,QAGzE6Q,GAAS,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,UAAW9Q,EAAa,EAAbA,OAC5BuN,EJ4FD,SAAmBvN,GACxB,OAAOA,EAAO8J,MAAQ,EI7FZiH,CAAU/Q,GACdgR,EJuFD,SAA2BzD,EAAGxD,EAAmBC,GACtD,MAAM,cAAcuD,EAAIxD,GAAxB,MAA8CwD,EAAIvD,GAAlD,IIxFiBiH,CACf1D,EACAvN,EAAO+J,kBACP/J,EAAOgK,iBAGHkH,EAkCR,YAA4C,IAAtBJ,EAAqB,EAArBA,UAAW9Q,EAAU,EAAVA,OAEzB8J,EAAQ9J,EAAO8J,MAAQ,EAAI9J,EAAO+J,kBAClC7C,EAASlH,EAAOkH,OAAS,EAAIlH,EAAOgK,gBAE1C,OACEmH,YAASL,GACNM,OAAO,WACPf,KAAK,QAAS,eACdA,KAAK,QAHR,GAGoBvG,EAAQ9J,EAAOkK,eAChCmG,KAAK,SAJR,GAIqBnJ,EAASlH,EAAOkK,eAElClD,MAAM,QANT,GAMqB8C,EAAQ9J,EAAOkK,eACjClD,MAAM,SAPT,GAOsBE,EAASlH,EAAOkK,eA/C5BmH,CAAW,CAAEP,YAAW9Q,WAQpC,OA2CF,YAAiD,IAA1BA,EAAyB,EAAzBA,OAAQkR,EAAiB,EAAjBA,IAAKF,EAAY,EAAZA,SAC5BrE,EAAWD,GAAkB1M,GAC7BsR,EAAMhE,GAAatN,GAEZkR,EAAIE,OAAO,KAAKf,KAAK,QAAS,OAAOA,KAAK,YAAaW,GAGjEO,UAAU,QACVlO,KAAKsJ,GACL6E,QACAJ,OAAO,QACPf,KAAK,QAAS,kBACdA,KAAK,QAAQ,SAAChD,EAAG7O,GAEhB,OAAKqO,aAAQ7M,EAAO0K,gBAAkB1K,EAAO0K,cAAclM,GAClDwB,EAAO0K,cAAclM,GAGvBwB,EAAOyR,WAAWpE,EAAI7O,MAE9B6R,KAAK,IAAKiB,GArEbI,CAAY,CAAE1R,SAAQkR,MAAKF,aACvBhR,EAAO2R,eAuEN,YAEH,IADF3R,EACC,EADDA,OAAQkR,EACP,EADOA,IAAKF,EACZ,EADYA,SAAUzD,EACtB,EADsBA,EAEjBrK,EAAQiJ,GAAenM,GACvB2M,EAAWD,GAAkB1M,GAC7BoM,EAAQR,GAAe5L,GACvBiM,EAAQjM,EAAO0L,SAAW1L,EAAOyL,SAG/BnB,EAAwBtK,EAAxBsK,oBAEFsH,EAAwBhF,aAAQtC,KAAyBuC,aAAQvC,GACjEuH,EAAsBD,GAAyBtH,EAAoBgC,SAAWK,EAASL,OAE7F,GAAIsF,IAA0BC,EAC5B,MAAM,IAAIC,MAAJ,2DACuDnF,EAASL,QAqCxE,GAlC2B,WAAO,IAAD,EAC/B,IAAMyF,EAAKb,EAAIE,OAAO,KAAKf,KAAK,QAAS,SAASA,KAAK,YAAaW,GAEpE,IAAMgB,EAAa,SACdhS,GADc,IAEjBqK,mBAAoBrK,EAAOiO,QAAQlB,KAAI,SAACgB,GAAD,OAAUA,EAAKzO,WAExD,IAAM4D,EAAQiJ,GAAe6F,GAC7B,IAAMrF,EAAWD,GAAkBsF,GACnCD,EAAGR,UAAU,QACVlO,KAAKH,GACLsO,QACAJ,OAAO,QACPf,KAAK,aAAa,SAAChD,EAAG7O,GACrB,IAAMkP,EAAQsE,EAAc3H,mBAAmBiC,SAAW,EACtDF,EAAMiB,GACN1E,GAAagE,EAAUnO,GAE3B,IAAM0P,EAAWlO,EAAOyL,SAAWiC,EAAQzB,EAE3C,MAAM,YAAYiC,EAAW,IAA7B,gBAA8ClO,EAAO2L,WAAa4B,EAAI,KAAtE,UAEDgD,MAAK,SAAClD,EAAG7O,GAAJ,OAAUwB,EAAOiO,QAAQzP,GAAGyT,SAEjC5B,KAAK,QAAS,iBAEdrJ,MAAM,cAAe,UACrBA,MAAM,aAlBT,EAkBsBhH,EAAOkS,sBAlB7B,OAkBoD,IACjDlL,MAAM,cAAe,QAErBA,MAAM,OAAQhH,EAAO2C,WAE1BwP,GAEIP,GAAyBC,EAY3B,YA+BJ,YASI,IARF7R,EAQC,EARDA,OACAkR,EAOC,EAPDA,IACAF,EAMC,EANDA,SACAzD,EAKC,EALDA,EACArK,EAIC,EAJDA,MACAyJ,EAGC,EAHDA,SACAP,EAEC,EAFDA,MACAH,EACC,EADDA,MAEQ5B,EAA4CrK,EAA5CqK,mBAAoBC,EAAwBtK,EAAxBsK,oBAG5B,SAAS8H,EAAgB/E,EAAG7O,GAC1B,IAAMkP,EAAsC,IAA9BrD,EAAmBiC,OAAeF,EAAMiB,GAAK1E,GAAagE,EAAUnO,GAIlF,OAFiBwB,EAAOyL,SAAWiC,EAAQzB,EAM7C,IAAMoG,EAAY/H,EAAoByC,KAAI,SAACkF,EAAOzT,GAChD,IAAM8T,EAAa9T,EACb+T,EAAa/T,EAAI,EAGjBgU,EAASJ,EADJlP,EAAMoP,GACkBA,GAKnC,OAFeF,EADJlP,EAAMqP,GACkBA,GAElBC,GAAU,KAGvB3O,EAAc0J,EAAIvN,EAAO8K,UAAY9K,EAAOsL,UAC5CmC,EAAcF,EAAIvN,EAAOsL,UAEzBmH,EAAWhF,GAAeA,EAAc5J,GAAe,EAElDqN,EAAIE,OAAO,KAAKf,KAAK,QAAS,SAASA,KAAK,YAAaW,GAEjEO,UAAU,QACVlO,KAAKiH,GACLkH,QACAJ,OAAO,QACPf,KAAK,aAAa,SAAChD,EAAG7O,GACrB,IAAM0P,EAAWmE,EAAU7T,GAErBkU,EAAS,UAAaxE,EAAb,mBACblO,EAAO2L,WAAa4B,GADP,IAGToF,EAAS,UAAazE,EAAb,mBACblO,EAAO2L,WAAa,EAAI8G,GADX,IAKf,MAAsB,YAAfpF,EAAEoF,SAAyBC,EAAYC,KAE/CpC,MAAK,SAAClD,GAAD,OAAOA,EAAEkD,MAAQ,MAEtBF,KAAK,QAAS,iBAEdrJ,MAAM,cAAe,UACrBA,MAAM,aAAa,SAACqG,GAAD,OAAOA,EAAEzK,UAAY5C,EAAOkL,iBAC/ClE,MAAM,cAAe,QACrBA,MAAM,QAAQ,SAACqG,GAAD,OAAOA,EAAExI,OAAS7E,EAAO2C,aA5GxCiQ,CAA2B,CACzB5S,SACAkR,MACAF,WACAzD,IACArK,QACAyJ,WACAP,QACAH,UAOOiF,EAAIE,OAAO,KAAKf,KAAK,QAAS,SAASA,KAAK,YAAaW,GAEjEO,UAAU,QACVlO,KAAKH,GACLsO,QACAJ,OAAO,QACPf,KAAK,aAAa,SAAChD,EAAG7O,GACrB,IAAMkP,EAA6C,IAArC1N,EAAOqK,mBAAmBiC,OACpCF,EAAMiB,GACN1E,GAAagE,EAAUnO,GAI3B,MAAM,WAFWwB,EAAOyL,SAAWiC,EAAQzB,GAE3C,mBAA2CjM,EAAO2L,WAAa4B,GAA/D,OAEDgD,KAAKvQ,EAAOyQ,aAEZJ,KAAK,QAAS,iBAEdrJ,MAAM,cAAe,UACrBA,MAAM,YAAahH,EAAOkL,eAC1BlE,MAAM,cAAe,QAErBA,MAAM,OAAQhH,EAAO2C,WAlKtBkQ,CAAc,CACZ7S,SAAQkR,MAAKF,WAAUzD,MAGpB,CACL+C,mBAAoBtQ,EAAOiO,QAAQlB,KACjC,SAAC+F,GAAD,OAyON,YAAmD,IAAhB9S,EAAe,EAAfA,OAAQkR,EAAO,EAAPA,IACnC9I,GAAcpI,EAAO8J,MAAQ,EAAI9J,EAAO+J,mBAAqB,EAE7D1B,GAAcrI,EAAO8J,MAAQ,EAAI9J,EAAOgK,iBAAmB,EAEjE,OACEkH,EACGE,OAAO,KACPf,KAAK,YAFR,aAEkCjI,EAFlC,KAEiDC,EAFjD,KAGG+I,OAAO,QAEPf,KAAK,QAAS,iBACdA,KAAK,cAAe,UAEpBA,KAAK,IAAK,IAEVE,KAAKvQ,EAAOwQ,cACZxJ,MAAM,YAAahH,EAAOmL,mBAC1BnE,MAAM,cAAehH,EAAOoL,qBAC5BpE,MAAM,OAAQhH,EAAO2C,WA5PLoQ,CAAwB,CACvC/S,OAAO,SACFA,GACA8S,GAEL5B,WAGJpD,QAAS9N,EAAOiO,QAAQlB,KACtB,SAAC+F,GAAD,OAuPN,YAEI,IADF9S,EACC,EADDA,OAAQkR,EACP,EADOA,IAAK3D,EACZ,EADYA,EAAGyD,EACf,EADeA,SAEVgC,EJhQD,YAAyD,IAAxBC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,OACnD,GAAID,EAAc,GAAKA,EAAc,EACnC,MAAM,IAAInB,MAAJ,qCAA+CmB,GAEvD,OAAOzJ,KAAK2J,MAAMD,EAASD,GI4PNG,CAAsB,CACzCH,YAAajT,EAAO6K,kBACpBqI,OAAQ3F,IAGJ8F,EAAW,CACf,CAACrT,EAAOuL,aAAe,EAAG,GAC1B,CAAC,GAAIyH,GACL,EAAGhT,EAAOuL,aAAe,EAAI,GAC7B,CAAC,EAAGvL,EAAOwL,mBACX,CAACxL,EAAOuL,aAAe,EAAG,IAGtB+H,EAAcC,cAAS9N,MAAM+N,KAQnC,OANWtC,EACRE,OAAO,KACP/N,KAAK,CAACgQ,IACNhD,KAAK,QAAS,WACdA,KAAK,YAAaW,GAClBhK,MAAM,OAAQhH,EAAOuK,aAErB6G,OAAO,QACPf,KAAK,IAAKiD,GACVjD,KAAK,YAHD,UAGwBrQ,EAAOyL,SAH/B,KA/QcgI,CAAc,CAC7BzT,OAAO,YACFA,GACA8S,GAFC,IAGJvI,YAAauI,EAAYjO,QAE3BqM,MACA3D,IACAyD,kB,obEvEF0C,G,iCAGJ,WAAYtQ,GAAQ,IAAD,sBACjB,cAAMA,IAcRyN,OAAS,WACP,OAAO,yBAAK8C,IAAK,SAAAA,GAAG,OAAK,EAAKC,SAAWD,MAZzC,EAAK/F,QAAU,CACbE,SAAS,EACTwC,oBAAoB,GANL,E,6CAUnB,WAEEuD,KAAKC,gB,gCAOP,WAEMD,KAAKzQ,MAAMyG,YACbgK,KAAKC,cAGLD,KAAKE,mB,yBAIT,WACEF,KAAK7T,OJ0CgB,SAAC,GAA0C,IAAxCgU,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACxClU,EAAS,CAIb8J,MAAOkK,EAAM/J,WAAagK,EAAcD,EAAMlK,MAC9C5C,OAAQ8M,EAAM/J,WAAaiK,EAAeF,EAAM9M,OAGhD6C,kBAAmBiK,EAAMjK,kBACzBC,gBAAiBgK,EAAMhK,gBAGvBE,cAAe8J,EAAM9J,cAGrBY,UAAWkJ,EAAMlJ,UAEjBlB,SAAUoK,EAAMpK,SAChBpE,SAAUwO,EAAMxO,SAEhB+E,YAAayJ,EAAMzJ,YAEnB6C,WAAY4G,EAAM7J,SAElBE,mBAAoB2J,EAAM3J,mBAG1BC,oBAAqB0J,EAAM1J,oBAG3BF,iBAAkBrB,GAA2B,CAC3CC,qBAAsBgL,EAAM5J,iBAC5BnB,aAAc+K,EAAM7J,WAEtBO,cAAesJ,EAAMtJ,cAErB+G,WACEuC,EAAMtJ,cAAc4B,OAAS,EACzB6H,YAAgBH,EAAMtJ,eACtB0J,YAAiBC,YAAML,EAAMxJ,YAAa6J,YAAML,EAAMvJ,WAE5DE,iBAAkBqJ,EAAMrJ,iBACxBC,yBAA0BoJ,EAAMpJ,yBAChCC,kBAAmBmJ,EAAMnJ,kBAEzBlI,UAAWqR,EAAMrR,UAEjB8N,YAAa6D,YAASN,EAAMjJ,aAE5BC,iBAAkBgJ,EAAMhJ,iBAExBC,6BAA8B+I,EAAM/I,6BAGpCC,cAAe8I,EAAM9I,cACrBC,kBAAmB6I,EAAM7I,kBACzBC,oBAAqB4I,EAAM5I,oBAC3B6C,QAAS+F,EAAM/F,SAGjB,OAAOhM,OAAOsS,OAAO,GAAIlJ,GAAgBrL,GIvGzBwU,CAAU,CACtBR,MAAOH,KAAKzQ,MACZ6Q,YAAaJ,KAAKD,SAASa,WAAWC,YACtCR,aAAcL,KAAKD,SAASa,WAAWE,eAIzCxD,YAAS0C,KAAKD,UAAUgB,OAAO,OAAOC,SAEtChB,KAAKjG,QAAUiD,GAAO,CACpBC,UAAW+C,KAAKD,SAChB5T,OAAQ6T,KAAK7T,SAGf2N,GAAO,CACLC,QAASiG,KAAKjG,QACdC,SAAUgG,KAAKzQ,MAAM9D,MACrBU,OAAQ6T,KAAK7T,W,4BAIjB,WJqF0B,IAACA,EAAQuG,EIpFjCsN,KAAK7T,QJoFoBA,EIpFE6T,KAAK7T,OJoFCuG,EIpFO,CACtCkK,YAAa6D,YAAST,KAAKzQ,MAAM2H,aAAe,IAChDC,iBAAkB6I,KAAKzQ,MAAM4H,kBAAoB,YJmF9C,GAAP,MACKhL,GACAuG,IIhFHoH,GAAO,CACLC,QAASiG,KAAKjG,QACdC,SAAUgG,KAAKzQ,MAAM9D,OAAS,EAC9BU,OAAQ6T,KAAK7T,a,GAjEY8U,iBAAzBpB,GACGqB,YAAc,mBA0EvBrB,GAAiBzS,aAAe0I,GAEjB+J,UCxEA,YAACtQ,GACd,MAMIA,EALFC,KACEnB,EAFJ,EAEIA,OACAiI,EAHJ,EAGIA,SACA6K,EAJJ,EAIIA,eAGExP,EAAWyP,IAAMC,SACrB,kBAAMC,KACJ,SAACC,EAAKrH,GAAN,OAAgBA,EAAKzO,MAAQ8V,EAAMrH,EAAKzO,MAAQ8V,IAAM,EAAGjL,KAE3D,CAACA,IAEGkL,EAAaJ,IAAMC,SAAQ,WAC/B,IAAMI,EAAQH,KAAS,SAACC,EAAKrH,GAAN,OAAeA,EAAKzO,MAAQ8V,IAAK,EAAGjL,GAC3D,OAAOA,EAAS4C,KAAI,SAACgB,GAAD,OAAUA,EAAKzO,MAAQgW,OAC1C,CAACnL,IACEO,EAAgBuK,IAAMC,SAAQ,kBAAM/K,EAAS4C,KAAI,SAACgB,GAAD,OAAUA,EAAKlJ,WAAQ,CAACsF,IACzEoL,EAAmBN,IAAMC,SAAQ,WACrC,IAAMI,EAAQH,KAAS,SAACC,EAAKrH,GAAN,OAAeA,EAAKzO,MAAQ8V,IAAK,EAAGJ,GAC3D,OAAOA,EAAejI,KAAI,SAACgB,GAAD,OAAUA,EAAKzO,MAAQgW,OAChD,CAACN,IACEQ,EAAsBP,IAAMC,SAChC,kBAAMF,EAAejI,KAAI,SAACgB,GAAD,OAAUA,EAAKlJ,WACxC,CAACmQ,IAEH,EAKIS,cAJFC,EADF,EACEA,SACAxO,EAFF,EAEEA,OACA4C,EAHF,EAGEA,MACA6L,EAJF,EAIEA,YAEF,OACE,kBAAC,OAAD,CACE3O,MAAO,CACL8C,MAAO,OACP5C,OAAQ,OACR0O,gBAAiB,SAEnBF,SAAUA,GAEV,kBAAC,OAAD,CACE1O,MAAO,CAAC,CACNyL,SAAU,WACVhP,IAAK,EACLG,KAAM,GACNiS,QAAS,KAIT3T,EAAO6K,KAAI,gBAAGkF,EAAH,EAAGA,MAAOpN,EAAV,EAAUA,MAAV,OACT,kBAAC,MAAD,CACEiR,cAAc,MACdC,WAAW,UAEX,kBAAC,MAAD,CACEjM,MAAO,EACP5C,OAAQ,EACR8O,aAAc,EACdJ,gBAAiB/Q,EACjBoR,GAAI,EACJC,GAAI,IAEN,kBAAC,OAAD,KAAOjE,QAMb0D,GACE,oCACE,kBAAC,GAAD,CACE7L,MAAOA,EAAQ,GACf5C,OAAQA,EACR8C,gBAAiB,GACjBD,kBAAmB,GACnBmI,oBAAqB,GACrBjE,QAAS/L,EACToI,oBAAqBH,EACrBA,SAAUA,EAASmC,OACnB5B,cAAeA,EACf2K,WAAYA,EACZzL,SAAU,EACVpE,SAAUA,EACVmM,eAAe,IAEjB,kBAAC,OAAD,CACE3K,MAAO,CAACmP,IAAWC,mBAAoB,CACrC3S,IAAK4S,GACLzS,KAAMyS,GACNR,QAAS,KAITb,GACE,kBAAC,GAAD,CACElL,MAAOA,EAAQ,GAnGpB,IAoGK5C,OAAQA,EACR8C,gBAAiB,GACjBD,kBAAmB,GACnBmI,oBAAqB,GACrBjE,QAAS/L,EACToI,oBAAqB0K,EACrB7K,SAAU6K,EAAe1I,OACzB5B,cAAe8K,EACfH,WAAYE,EACZ3L,SAAU,EACVpE,SAAUA,EACVmM,eAAe,Q,8BCrHtB2E,GAAUrB,IAAMsB,YAAW,SAACnT,EAAmBoT,GAC1D,IAAWC,EAAX,QAAoBrT,GACpB,OACE,kBAAC,OAAD,MACEuQ,IAAK6C,EACLE,GAAIC,MACAF,O,+BCEGG,I,wBAAa,SAACxT,GACzB,IACEyT,EAEEzT,EAFFyT,SACAvX,EACE8D,EADF9D,MAEF,OACE,oCACE,kBAAC,KAAD,CACEwX,iBAAkB,CAChB9P,MAAO,CACL8C,MAAO,OACP5C,OAAQ,SAGZ6P,IAAKA,KACLzX,MAAOA,EACPuX,SAAUA,EACV/W,MAAM,qC,wlBCnBd,IAAMkX,GAAc,CAClBC,OAAQ,gBACRC,QAAS,gBACTC,MAAO,QAsDF,IAAMC,GAASC,aAnDtB,SACEjU,EACAmT,GAEA,IACEvP,EAKE5D,EALF4D,MACAsQ,EAIElU,EAJFkU,KAFF,EAMIlU,EAHFmU,cAHF,MAGW,CAAEC,IAAK,uEAHlB,IAMIpU,EAFFqU,gBAJF,WAMIrU,EADFsU,kBALF,MAKe,UALf,EAOMC,EAAeC,YAAoCrB,GACnD5R,EAAKsQ,IAAMC,SAAQ,kBAAMC,QAAU,IA8BzC,OA7BAF,IAAM4C,WACJ,WACMF,EAAaG,SACfH,EAAaG,QAAQC,UAEvB,IAAMC,EAAyBC,SAASC,eAAevT,GACjDwT,EAAYC,iBAAA,OAChBtH,UAAWkH,EACXK,SAAU,MACVf,OACAgB,SAAUb,GAGRF,EAAOC,IAEH,CAAEe,KAAMhB,EAAOC,KACf,CAAEgB,cAAejB,IAVP,IAYhBkB,iBAAkB,CAChBC,oBAAqB1B,GAAYU,OAMrC,OAHAC,EAAaG,QAAUK,EAEb,MAAV5B,KAAa4B,GACN,iCAAMR,EAAaG,cAAnB,EAAM,EAAsBC,aAErC,CAACN,EAAUH,EAAMC,IAGjB,kBAACoB,GAAA,EAAD,CAEEC,SAAUjU,EACVqC,MAAOA,MAOX,CACE6R,cAAc,I,ynBC/DX,IAAMC,GAAQ,SAAC1V,GACpB,IACE2V,EAIE3V,EAJF2V,SADF,EAKI3V,EAHF4V,cAFF,MAEW,GAFX,IAKI5V,EAFF6V,aAHF,MAGU,GAHV,EAIKxC,EAJL,KAKIrT,EALJ,IAMA,OACE,kBAAC,MAAD,QACMqT,EADN,CAEEuC,OAAM,IACJpD,gBAAiB,YACdoD,GAELC,MAAK,IACHrD,gBAAiB,WACdqD,KAGJF,I,4ECjBP,SAASG,GAAT,GAMI,IALFH,EAKC,EALDA,SACA/R,EAIC,EAJDA,MAKA,OACE,kBAAC,KAAD,CACEmS,sBAAuB,CACrB,CACEC,SAAU,GAEZpS,IAGD+R,GAWA,SAASM,GAAT,GAMI,IAAD,IALRC,kBAKQ,aAJRC,+BAIQ,SAHRR,EAGQ,EAHRA,SACAS,EAEQ,EAFRA,UACG/C,EACK,WACFgD,EAAYF,EACdG,uBACAzE,IAAM0E,SACV,OAAIH,EAEA,kBAAC,GAAD,CACExS,MAAO,CACL8C,MAAO,OACP5C,OAAQ,OACR6O,WAAY,SACZ6D,eAAgB,WAGlB,kBAAC,UAAD,OAKJ,kBAAC,GAAD,MACEC,KAAM,EACNC,UAAQ,GACJrD,GAEH6C,EACC,kBAACG,EAAD,CACEzS,MAAO,CACL8C,MAAO,OACP5C,OAAQ,SAGV,kBAAC,GAAD,CAAYF,MAAO,CACjB8C,MAAO,OACP5C,OAAQ,SAGP6R,IAIL,kBAACU,EAAD,CACEzS,MAAO,CACL8C,MAAO,OACP5C,OAAQ,SAGT6R,ICxFJ,I,0CAAMgB,GAAe,SAAOC,EAAYC,GAAnB,SAAAjb,EAAAC,OAAA,yEAAyC,IAAIib,SACvE,SAACC,EAAKC,GACJ,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,WAC9B,IAAQC,EAAWH,EAAXG,OAERL,EAAIK,MAENH,EAAOE,iBAAiB,SAAS,SAACE,GAChCL,EAAIK,MAENJ,EAAOK,WAAWV,EAAMC,OAXA,6D,uECMfU,GAAU,SAACvX,GACtB,IACEC,EAEED,EAFFC,KADF,EAGID,EADF0S,qBAFF,MAEkB,SAFlB,EAIA,OACE,kBAAC,MAAD,CACEA,cAAeA,GAGXzS,EAAK0J,KAAI,gBAAGwD,EAAH,EAAGA,KAAH,IAAS1L,aAAT,MAAiB,QAAjB,EAA0B+Q,EAA1B,EAA0BA,gBAA1B,OACP,kBAAC,MAAD,CACEA,gBAAiBA,EACjBgE,eAAe,SACf1D,GAAI,EACJD,GAAI,EACJ2E,GAAI,EACJC,GAAI,EACJ/Q,MAAO,QAEP,kBAAC,OAAD,CACElH,SAAU,EACViC,MAAOA,EACPiW,UAAU,UAETvK,S,2FCfXwK,GAAe,SAACC,EAAQzD,EAAQ9Y,GACpC,IAAMwc,EAAcD,EAAOE,QAW3B,OATA3D,EAAO4D,SAAQ,SAACpN,EAAMvH,GACc,qBAAvByU,EAAYzU,GACrByU,EAAYzU,GAAS/H,EAAQ2c,8BAA8BrN,EAAMtP,GACxDA,EAAQ4c,kBAAkBtN,GACnCkN,EAAYzU,GAAS8U,GAAMN,EAAOxU,GAAQuH,EAAMtP,IACb,IAA1Buc,EAAOO,QAAQxN,IACxBkN,EAAYpc,KAAKkP,MAGdkN,GAGHK,GAAQ,SAAClc,EAAUoc,GAAX,OAAyBC,KACrCrc,EACAoc,EACA,CAAEE,WAAYX,MAGHY,GAAe,SAACvY,GAC3B,IACEC,EACED,EADFC,KAEIuY,EAAc3G,IAAMC,SAAQ,kBAAMC,QAAU,IAoFlD,OAnFAF,IAAM4C,WAAU,YACD,mBAAA7Y,EAAAC,OAAA,8DAAAD,EAAA,WAAAA,EAAA,MACiB6c,MAAM,iBADvB,0BACwCtL,OADxC,2CACLiK,EADK,OAEWvC,SAASC,eAAe0D,GAChCE,UAAYtB,EAC1BnX,EAAK8X,SAAQ,SAACY,EAAWC,GACvB,IAAMC,EAAWhE,SAASiE,uBAAT,SAAwCF,EAAY,GAApD,UAA+D,GAC1EG,EAAQF,EAASG,qBAAqB,OAAO,GACnDL,EAAUZ,SAAQ,SAACkB,EAAOC,GAAgB,IAAD,IACjCC,EAAS,kBAAGC,GAAKR,SAAR,EAAG,EAAkBM,IAArB,EAAoC,GAEnD,EAMIhB,GACFe,EACAE,GAPA5X,EADF,EACEA,GACM8X,EAFR,EAEEpZ,KACMqZ,EAHR,EAGE9X,KAHF,IAIE+X,qBAJF,MAIkB,GAJlB,EAKKlG,EALL,WAUAjX,QAAQC,IAAI8c,EAAWF,EAAOf,GAC5Be,EACAE,IAEF,IAAMK,EAAiB3E,SAAS4E,cAAc,OAC9CD,EAAejY,GAAQA,EAAvB,YACA,IAAMmY,EAAe7E,SAAS4E,cAAc,OAkB5C,GAjBAC,EAAanY,GAAKA,EAClBiY,EAAeG,YAAYD,GAC3BH,EAAc5P,KAAI,SAACiQ,EAAcxW,GAC/B,IAAMyW,EAAsBhF,SAAS4E,cAAc,OACnDI,EAAoBtY,GAAQA,EAA5B,iBAA+C6B,EAC/CyV,EAASiB,aAAaD,EAAqBd,EAAMgB,oBACjDC,KAASvM,OACP,kBAAC,qBAAD,CACE7Q,OAAQN,EACRZ,iBAAkBA,GAEjBke,EAAaK,aAEhBJ,MAGJhB,EAASiB,aAAaN,EAAgBT,EAAMgB,oBACxCV,GAAaG,EAAgB,CAC/B,IAAMU,EAAQC,EAAcb,GAC5BU,KAASvM,OACP,oCACE,kBAAC8H,GAAA,EAAD,CACE3R,MAAO,CACL8C,MAAO,OACP5C,OAAQ,SAGV,kBAAC,qBAAD,CACElH,OAAQN,EACRZ,iBAAkBA,GAElB,kBAAC,MAAD,CACEsC,EAAG,EACHoc,EAAE,OACFC,EAAE,OACF1H,WAAW,SACX6D,eAAe,UAEf,kBAAC0D,EAAD,MACEja,KAAMoZ,GACFhG,QAMdqG,UAzEG,6DAgFbY,KACC,CAACra,IAEF,yBACE2D,MAAO,CACL2W,SAAU,WAEZhZ,GAAIiX,KAIJxZ,GACG,QADHA,GAEK,gCAFLA,GAGE,mCAGFwb,GAEO,WAFPA,GAGO,WAHPA,GAIQ,YAJRA,GAKK,UALLA,GAMG,QANHA,GAOG,QAGHC,GAA4B,CAChC,CACEhZ,MAAOnD,EAAiBC,MAE1B,CACEkD,MAAOnD,EAAiBC,MAE1B,CACEkD,MAAOnD,EAAiBC,OAGtBmc,GAA8B,CAClC,CACEjZ,MAAOnD,EAAiBC,MAE1B,CACEkD,MAAOnD,EAAiBI,OAE1B,CACE+C,MAAOnD,EAAiBI,QAItBic,GAA0B,CAC9B,CACElZ,MAAOnD,EAAiBK,OAE1B,CACE8C,MAAOnD,EAAiBG,WAE1B,CACEgD,MAAOnD,EAAiBE,SAItBoc,GAAW,CACf,CACE1e,MAAO,IAET,CACEA,MAAO,KAET,CACEA,MAAO,MAIL2e,GAAuB,CAC3B,CAEEC,EAAG,GACH,SAAUxc,EAAiBC,KAC3Bwc,EAAG,GACH,SAAUzc,EAAiBG,UAC3Buc,EAAG,GACH,SAAU1c,EAAiBC,OAIzB6a,GAAO,CACX,CACE,CACE7X,GAAI,YACJC,KAAM,WACNvB,KAAM,CACJ,CACEwB,MAAOnD,EAAiBE,QAE1B,CACEiD,MAAOnD,EAAiBG,WAE1B,CACEgD,MAAOnD,EAAiBC,QAI9B,CACEgD,GAAI,YACJC,KAAM,WACNvB,KAAM,CACJ,CACEwB,MAAOnD,EAAiBE,QAE1B,CACEiD,MAAOnD,EAAiBG,WAE1B,CACEgD,MAAOnD,EAAiBC,QAI9B,CACEgD,GAAI,YACJC,KAAM,WACNvB,KAAM,CACJ,CACEwB,MAAOnD,EAAiBE,QAE1B,CACEiD,MAAOnD,EAAiBG,WAE1B,CACEgD,MAAOnD,EAAiBC,QAI9B,CACEgD,GAAI,eACJC,KAAM,cACNvB,KAAM,CACJnB,OAAQ6b,GACR5T,SAAU0T,GACV7I,eAAgB8I,IAElBnB,cAAe,CACb,CACEU,UAAW,kBACT,kBAAC,GAAD,CACEha,KAAM,CACJ,CACEkN,KAAM,yCACN1L,MAAO,QACP+Q,gBAAiBlU,EAAiBC,MAEpC,CACE4O,KAAM,uCACNqF,gBAAiBlU,EAAiBI,eASlD,CACE,CACE6C,GAAI,eACJC,KAAM,cACNvB,KAAM,CACJnB,OAAQ6b,GACR5T,SAAU0T,GACV7I,eAAgB8I,IAElBnB,cAAe,CACb,CACEU,UAAW,kBACT,kBAAC,GAAD,CACEha,KAAM,CACJ,CACEkN,KAAM,yCACN1L,MAAO,QACP+Q,gBAAiBlU,EAAiBC,MAEpC,CACE4O,KAAM,uCACNqF,gBAAiBlU,EAAiBI,cAQhD,CACE6C,GAAI,eACJC,KAAM,cACNvB,KAAM,CACJnB,OAAQ6b,GACR5T,SAAU0T,GACV7I,eAAgB8I,KAGpB,CACEnZ,GAAI,eACJC,KAAM,cACNvB,KAAM,CACJnB,OAAQ6b,GACR5T,SAAU0T,GACV7I,eAAgB8I,IAElBnB,cAAe,CACb,CACEU,UAAW,kBACT,kBAAC,GAAD,CACEha,KAAM,CACJ,CACEkN,KAAM,yCACN1L,MAAO,QACP+Q,gBAAiBlU,EAAiBC,MAEpC,CACE4O,KAAM,uCACNqF,gBAAiBlU,EAAiBI,cAQhD,CACE6C,GAAI,eACJC,KAAM,cACNvB,KAAM,CACJnB,OAAQ,CACN,CACE2C,MAAOnD,EAAiBK,OAE1B,CACE8C,MAAOnD,EAAiBG,YAG5BsI,SAAU0T,GACV7I,eAAgB8I,IAElBnB,cAAe,CACb,CACEU,UAAW,kBACT,kBAAC,GAAD,CACEha,KAAM,CACJ,CACEkN,KAAM,yCACN1L,MAAO,QACP+Q,gBAAiBlU,EAAiBC,MAEpC,CACE4O,KAAM,uCACNqF,gBAAiBlU,EAAiBI,cAQhD,CACE6C,GAAI,eACJC,KAAM,cACNvB,KAAM,CACJnB,OAAQ6b,GACR5T,SAAU0T,GACV7I,eAAgB8I,IAElBnB,cAAe,CACb,CACEU,UAAW,kBACT,kBAAC,GAAD,CACEha,KAAM,CACJ,CACEkN,KAAM,yCACN1L,MAAO,QACP+Q,gBAAiBlU,EAAiBC,MAEpC,CACE4O,KAAM,uCACNqF,gBAAiBlU,EAAiBI,cAQhD,CACE6C,GAAI,YACJC,KAAM,WACNvB,KAAM4a,GACN3Y,KAAM,CAAC,IAAK,IAAK,KACjBqX,cAAe,CACb,CACEU,UAAW,kBACT,kBAAC,GAAD,CACEvH,cAAc,MACdzS,KAAM,CACJ,CACEkN,KAAM,oCACN1L,MAAO,QACP+Q,gBAAiBlU,EAAiBC,MAEpC,CACE4O,KAAM,iCACNqF,gBAAiBlU,EAAiBG,mBASlD,CACE,CACE8C,GAAI,YACJC,KAAM,WACNvB,KAAM4a,GACN3Y,KAAM,CAAC,IAAK,IAAK,KACjBqX,cAAe,CACb,CACEU,UAAW,kBACT,kBAAC,GAAD,CACEvH,cAAc,MACdzS,KAAM,CACJ,CACEkN,KAAM,oCACN1L,MAAO,QACP+Q,gBAAiBlU,EAAiBC,MAEpC,CACE4O,KAAM,iCACNqF,gBAAiBlU,EAAiBG,kBAQhD,CACE8C,GAAI,YACJC,KAAM,WACNvB,KAAM4a,GACN3Y,KAAM,CAAC,IAAK,IAAK,KACjBqX,cAAe,CACb,CACEU,UAAW,kBACT,kBAAC,GAAD,CACEvH,cAAc,MACdzS,KAAM,CACJ,CACEkN,KAAM,oCACN1L,MAAO,QACP+Q,gBAAiBlU,EAAiBC,MAEpC,CACE4O,KAAM,iCACNqF,gBAAiBlU,EAAiBG,kBAQhD,CACE8C,GAAI,cACJC,KAAM,aACNU,KAAM,CAAClD,GAAWA,GAAcA,IAChClC,OAAQ,CAACwB,EAAiBC,KAAMD,EAAiBG,UAAWH,EAAiBE,QAC7E+a,cAAe,CACb,CACEU,UAAW,kBACT,kBAAC,GAAD,CACEvH,cAAc,MACdzS,KAAM,CACJ,CACEkN,KAAM,oCACN1L,MAAO,QACP+Q,gBAAiBlU,EAAiBC,MAEpC,CACE4O,KAAM,iCACNqF,gBAAiBlU,EAAiBG,WAEpC,CACE0O,KAAM,QACNqF,gBAAiBlU,EAAiBE,eAQhD,CACE+C,GAAI,eACJC,KAAM,cACNvB,KAAM,CACJnB,OAAQ6b,GACR5T,SAAU0T,GACV7I,eAAgB8I,IAElBnB,cAAe,CACb,CACEU,UAAW,kBACT,kBAAC,GAAD,CACEha,KAAM,CACJ,CACEkN,KAAM,yCACN1L,MAAO,QACP+Q,gBAAiBlU,EAAiBC,MAEpC,CACE4O,KAAM,uCACNqF,gBAAiBlU,EAAiBI,cAQhD,CACE6C,GAAI,eACJC,KAAM,cACNvB,KAAM,CACJnB,OAAQ6b,GACR5T,SAAU0T,GACV7I,eAAgB8I,KAGpB,CACEnZ,GAAI,YACJC,KAAM,WACNvB,KAAM4a,GACN3Y,KAAM,CAAC,IAAK,IAAK,KACjBqX,cAAe,CACb,CACEU,UAAW,kBACT,kBAAC,GAAD,CACEvH,cAAc,MACdzS,KAAM,CACJ,CACEkN,KAAM,oCACN1L,MAAO,QACP+Q,gBAAiBlU,EAAiBC,MAEpC,CACE4O,KAAM,iCACNqF,gBAAiBlU,EAAiBG,mBASlD,CACE,CACE8C,GAAI,YACJC,KAAM,WACNvB,KAAM4a,GACN3Y,KAAM,CAAC,IAAK,IAAK,KACjBqX,cAAe,CACb,CACEU,UAAW,kBACT,kBAAC,GAAD,CACEvH,cAAc,MACdzS,KAAM,CACJ,CACEkN,KAAM,oCACN1L,MAAO,QACP+Q,gBAAiBlU,EAAiBC,MAEpC,CACE4O,KAAM,iCACNqF,gBAAiBlU,EAAiBG,kBAQhD,CACE8C,GAAI,YACJC,KAAM,WACNvB,KAAM4a,GACN3Y,KAAM,CAAC,IAAK,IAAK,KACjBqX,cAAe,CACb,CACEU,UAAW,kBACT,kBAAC,GAAD,CACEvH,cAAc,MACdzS,KAAM,CACJ,CACEkN,KAAM,oCACN1L,MAAO,QACP+Q,gBAAiBlU,EAAiBC,MAEpC,CACE4O,KAAM,iCACNqF,gBAAiBlU,EAAiBG,kBAQhD,CACE8C,GAAI,YACJC,KAAM,WACNvB,KAAM4a,GACN3Y,KAAM,CAAC,IAAK,IAAK,KACjBqX,cAAe,CACb,CACEU,UAAW,kBACT,kBAAC,GAAD,CACEvH,cAAc,MACdzS,KAAM,CACJ,CACEkN,KAAM,oCACN1L,MAAO,QACP+Q,gBAAiBlU,EAAiBC,MAEpC,CACE4O,KAAM,iCACNqF,gBAAiBlU,EAAiBG,kBAQhD,CACE8C,GAAI,cACJC,KAAM,aACNU,KAAM,CAAClD,GAAWA,GAAcA,IAChClC,OAAQ,CAACwB,EAAiBC,KAAMD,EAAiBG,UAAWH,EAAiBE,QAC7E+a,cAAe,CACb,CACEU,UAAW,kBACT,kBAAC,GAAD,CACEvH,cAAc,MACdzS,KAAM,CACJ,CACEkN,KAAM,oCACN1L,MAAO,QACP+Q,gBAAiBlU,EAAiBC,MAEpC,CACE4O,KAAM,iCACNqF,gBAAiBlU,EAAiBG,WAEpC,CACE0O,KAAM,QACNqF,gBAAiBlU,EAAiBE,iBC1oBvCyc,IDk2BD,IAEFzZ,KA9vBD,SA4vBG,OAGDxC,GAAY,IAHX,OAIDA,GAAe,IAJd,OAKDA,GAAa,KALZ,IASFwC,KAAMgZ,IATJ,OAUDxb,GAAY,IAVX,OAWDA,GAAe,IAXd,OAYDA,GAAa,IAZZ,IAgBFwC,KAAMgZ,IAhBJ,OAiBDxb,GAAY,IAjBX,OAkBDA,GAAe,IAlBd,OAmBDA,GAAa,IAnBZ,IAuBFwC,KAAMgZ,IAvBJ,OAwBDxb,GAAY,IAxBX,OAyBDA,GAAe,IAzBd,OA0BDA,GAAa,KA1BZ,IA6BFwC,KAAMgZ,IA7BJ,OA8BDxb,GAAY,KA9BX,OA+BDA,GAAe,IA/Bd,OAgCDA,GAAa,IAhCZ,IAmCFwC,KAAMgZ,IAnCJ,OAoCDxb,GAAY,IApCX,OAqCDA,GAAe,KArCd,OAsCDA,GAAa,IAtCZ,IAyCFwC,KAAMgZ,IAzCJ,OA0CDxb,GAAY,IA1CX,OA2CDA,GAAe,IA3Cd,OA4CDA,GAAa,KAuEZ,IAEFwC,KAAM,gDAFJ,OAGDxC,GAAY,IAHX,OAIDA,GAAe,IAJd,OAKDA,GAAa,KALZ,IASFwC,KAAM,6CATJ,OAUDxC,GAAY,IAVX,OAWDA,GAAe,IAXd,OAYDA,GAAa,IAZZ,IAgBFwC,KAAM,iBAhBJ,OAiBDxC,GAAY,IAjBX,OAkBDA,GAAe,IAlBd,OAmBDA,GAAa,IAnBZ,IAuBFwC,KAAM,wBAvBJ,OAwBDxC,GAAY,IAxBX,OAyBDA,GAAe,IAzBd,OA0BDA,GAAa,KA1BZ,IA6BFwC,KAAM,0BA7BJ,OA8BDxC,GAAY,KA9BX,OA+BDA,GAAe,IA/Bd,OAgCDA,GAAa,IAhCZ,IAmCFwC,KAAM,uBAnCJ,OAoCDxC,GAAY,IApCX,OAqCDA,GAAe,KArCd,OAsCDA,GAAa,IAtCZ,IAyCFwC,KAAM,kBAzCJ,OA0CDxC,GAAY,IA1CX,OA2CDA,GAAe,IA3Cd,OA4CDA,GAAa,KCngCLH,OAAOqD,KAAKiY,GAAepb,MAAK,SAACnD,EAAGsf,GAAJ,OAAUA,EAAItf,KAEvC,SAACoE,GACzB,IAAYA,GACZ,IAAMmb,EAAQC,qBAERC,GADmBC,eACLzJ,IAAMC,SAAQ,WAChC,IAAMyJ,EAAkB,IAAIC,gBAAgBC,OAAOC,SAASC,QACtDxY,EAAStE,OAAO+c,YAAYL,EAAgBM,WAClD,OAAa,MAAN1Y,OAAA,EAAAA,EAAQlD,OAAQ6b,KAAKC,MAAL,MAAW5Y,OAAX,EAAWA,EAAQlD,QACzC,KACH,EAIa+b,aAAS,CACpB/b,KAAMob,EACNY,OAAQ,OACRC,aAAa,IAPf,kBACEjc,EADF,EACEA,KACAgc,EAFF,EAEEA,OACAC,EAHF,EAGEA,YACC3R,EAJH,KASQ4R,EAAoB9c,yBAApB8c,gBAKFC,GAJaC,6BAAmB,CACpCC,KAAM,EACNC,GAAI,IAEiB1K,IAAM2K,aAC3B,4BAAA5gB,EAAAC,OAAA,2EAAAD,EAAA,MAEyB6gB,KAAgC,CAAEjb,KAAM,sBAFjE,UAGwB,aADd4V,EAFV,QAGe5V,KAHf,mCAAA5F,EAAA,MAI6B+a,GAAaS,EAAOsF,OAJjD,OAIYC,EAJZ,OAKMpS,GAAO,SAACqS,GACNA,EAAM3c,KAAO6b,KAAKC,MAAMY,GACxBC,EAAMX,OAAS,aAEjBY,YAAW,WACTtS,GAAO,SAACqS,GACNA,EAAMX,OAAS,YAEhB,MAbT,0DAgBI7f,QAAQib,MAAR,MACA8D,EAAM2B,KAAK,CACTC,MAAO,uBACPd,OAAQ,QACRe,YAAalB,KAAKmB,UAAL,QApBnB,mEAwBA,KAEIC,EAAUrL,IAAM2K,aAAY,WAChC,IAAMW,EAAI,GAAM1B,OAAOC,SAAS0B,OAAS3B,OAAOC,SAAS2B,SAA/C,IAA2DC,GAAY,CAAErd,SACnFsd,KAAoBJ,GACpBhC,EAAM2B,KAAK,CACTC,MAAO,QACPC,YAAa,oCACbf,OAAQ,cAET,CAAChc,IA4BEud,GA3Ba3L,IAAM2K,aACvB,8BAAA5gB,EAAAC,OAAA,uDACQsY,EAASU,SAASC,eAAe,kBACjCpO,EAFR,MAEgByN,OAFhB,EAEgBA,EAAQsJ,YAChB3Z,EAHR,MAGiBqQ,OAHjB,EAGiBA,EAAQuJ,aAHzB,WAAA9hB,EAAA,MAIuB+hB,KAAYxJ,EAAQ,CACvCyJ,YAAW,MAAEzJ,OAAF,EAAEA,EAAQsJ,YACrBI,aAAY,MAAE1J,OAAF,EAAEA,EAAQuJ,aACtBhX,QACA5C,YARJ,cAUSga,QAAO,SAAClH,GACb6E,OAAOsC,KAAKC,IAAIC,gBAAgBrH,GAAO,WACvCsH,aAAStH,EAAM,CACbuH,KAAM,mBAbZ,8DAkBA,CAACle,IAQkB4R,IAAMC,SAAQ,kBAAMC,KACvC,YAAmB,IAAhBqM,EAAe,EAAfA,SACDhiB,QAAQC,IAAI,IAAK+hB,GACjBvB,YAAW,kBAAMtS,GAAO,SAACqS,GACvBA,EAAM3c,KAAOme,OACX,KAEN,OACC,KAsCH,MAAe,YAAXnC,EAEA,kBAAC,GAAD,CACExF,KAAM,GAEN,kBAAC,SAAD,CACEA,KAAM,EACN2D,EAAE,QAEF,kBAACpG,GAAD,CACEG,OAAQ,CACNC,IAAK,6DAEPxQ,MAAO,CACL8C,MAAO,MACP5C,OAAQ,OAEVwQ,WAAW,UAEb,kBAAC,UAAD,CACE5S,KAAK,KACLmC,WAAW,QAFb,mCAWN,kBAACoS,GAAD,CACEC,YAAU,GAEV,kBAAC,MAAD,CACExD,cAAc,MACd8D,eAAe,gBACf7D,WAAW,SACX3U,EAAG,GAEH,kBAAC,UAAD,CACE0D,KAAK,KACLmC,WAAW,QAFb,iBAOA,kBAAC,SAAD,CACEwa,MAAM,KACN1L,WAAW,UAEX,kBAACO,GAAD,CACEiL,KAAK,mBACLG,QAASnC,IAIXlc,IAEE,EAUFA,GAGE,kBAAC,SAAD,CACEqe,QAASpB,GADX,SASFjd,GAEA,kBAAC,SAAD,CACEqe,QAvIgB,kBAAMvM,KAC9B,kBAAMxH,GAAO,SAACqS,GACZA,EAAMV,aAAeU,EAAMV,iBAE7B,KAqIUA,EAAc,aAAe,eAIjC,kBAAC,SAAD,CACEoC,QAASlC,GADX,mBAOJ,kBAAC,UAAD,CAAShC,EAAE,SAERna,EA0BG,oCAmBE,kBAAC,QAAD,CACE8E,UAAU,MACVsZ,MAAO,EACPva,OAAO,QAEP,kBAAC,MAAD,CACE2S,KAAM,GASN,kBAAC,GAAD,CACExW,KAAMA,KA2CZic,GACE,kBAAC,QAAD,CACEzF,KAAM,EAEN3S,OAAO,QAOP,kBAAC,GAAD,CACE5H,MAAO+D,EACPwT,SAAU,SAACvX,GAAD,OAAWshB,EAAa,CAAEY,SAAUliB,UAnHtD,oCACE,kBAAC,SAAD,CACEua,KAAM,GAEN,kBAACzC,GAAD,CACEG,OAAQ,CACNC,IAAK,+DAEPxQ,MAAO,CACL8C,MAAO,MACP5C,OAAQ,OAEVwQ,WAAW,UAEb,kBAAC,UAAD,CACE5S,KAAK,KACLmC,WAAW,QAFb,oCAqHVyZ,GAAc,SAACiB,GACnB,IAAMC,EAAM,GACZ,IAAK,IAAMxgB,KAAKugB,EACVA,EAAIE,eAAezgB,IACrBwgB,EAAI/iB,KAAQijB,mBAAmB1gB,GAA/B,IAAqC0gB,mBAAmB5C,KAAKmB,UAAUsB,EAAIvgB,MAG/E,OAAOwgB,EAAIG,KAAK,MCxYH,SAASC,KAItB,OChBa,WACb,MAAgD/M,YAAe,GAA/D,WAAOgN,EAAP,KAA0BC,EAA1B,KAyBA,OAtBAjN,aAAgB,WACd,EAAAjW,EAAAC,OAAA,gDACE,IACEkjB,MAOA,MAAOC,GAEP5iB,QAAQ2Q,KAAKiS,GAVf,QAYEF,GAAmB,GACnBC,MAdJ,8DAmBC,IAEIF,EDbmBI,GAQxB,kBAAC,qBAAD,CACEriB,OAAQN,EACRZ,iBAAkBA,GAIlB,kBAAC,GAAD,MAGA,kBAACwjB,EAAA,EAAD,OAbK,O","file":"static/js/app.16e57925.chunk.js","sourcesContent":["var api = require(\"!../../../../../.config/yarn/global/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../.config/yarn/global/node_modules/css-loader/dist/cjs.js!./Override.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../.config/yarn/global/node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"#pf1 {\\n  transform-origin: 0 0;\\n  transform: scale(1.5);\\n  position: absolute;\\n  left: 100px;\\n  top: 0px;\\n}\\n#pf2 {\\n  transform-origin: 0 0;\\n  transform: scale(1.5);\\n  position: absolute;\\n  left: 100px;\\n  top: 1000px;\\n}\\n#pf3 {\\n  transform-origin: 0 0;\\n  transform: scale(1.5);\\n  position: absolute;\\n  left: 100px;\\n  top: 2000px;\\n}\\n#pf4 {\\n  transform-origin: 0 0;\\n  transform: scale(1.5);\\n  position: absolute;\\n  left: 100px;\\n  top: 3000px;\\n}\\n\\n.x0 {\\n  z-index: -1;\\n}\\n\\n#PieChart0Container {\\n  position: absolute;\\n  left: 25px;\\n  top: 340px;\\n  width: 1200px;\\n  height: 500px;\\n  background-color: white;\\n  transform-origin: 0 0;\\n  transform: scale(0.25);\\n}\\n\\n#PieChart0 {\\n  width: 1000px;\\n  height: 500px;\\n}\\n\\n#PieChart1Container {\\n  position: absolute;\\n  left: 25px;\\n  top: 500px;\\n  transform-origin: 0 0;\\n  transform: scale(0.25);\\n  width: 680px;\\n  height: 400px;\\n  background-color: white;\\n}\\n\\n#PieChart1 {\\n  width: 600px;\\n  height: 400px;\\n}\\n\\n#PieChart2Container {\\n  position: absolute;\\n  left: 230px;\\n  top: 500px;\\n  transform-origin: 0 0;\\n  transform: scale(0.25);\\n  width: 680px;\\n  height: 400px;\\n  background-color: white;\\n}\\n\\n#PieChart2 {\\n  width: 600px;\\n  height: 400px;\\n}\\n\\n#Speedometer0Container {\\n  position: absolute;\\n  left: 410px;\\n  top: 430px;\\n  transform-origin: 0 0;\\n  transform: scale(0.25);\\n  background-color: white;\\n  width: 1020px;\\n  height: 550px;\\n}\\n\\n#Speedometer0 {\\n  width: 700px;\\n  height: 500px;\\n  padding-top: 60px;\\n}\\n\\n#Speedometer1Container {\\n  position: absolute;\\n  left: 25px;\\n  top: 175px;\\n  transform-origin: 0 0;\\n  transform: scale(0.25);\\n  background-color: white;\\n  width: 800px;\\n  height: 700px;\\n}\\n\\n#Speedometer1 {\\n  width: 600px;\\n  height: 500px;\\n  padding-left: 70px;\\n  padding-top: 300px;\\n}\\n\\n#Speedometer2Container {\\n  position: absolute;\\n  left: 200px;\\n  top: 175px;\\n  transform-origin: 0 0;\\n  transform: scale(0.25);\\n  background-color: white;\\n  width: 770px;\\n  height: 700px;\\n}\\n\\n#Speedometer2 {\\n  width: 600px;\\n  height: 500px;\\n  padding-left: 70px;\\n  padding-top: 300px;\\n}\\n\\n#Speedometer3Container {\\n  position: absolute;\\n  left: 25px;\\n  top: 419px;\\n  transform-origin: 0 0;\\n  transform: scale(0.25);\\n  background-color: white;\\n  width: 1440px;\\n  height: 500px;\\n}\\n\\n#Speedometer3 {\\n  width: 700px;\\n  height: 500px;\\n  padding-top: 120px;\\n}\\n\\n#Speedometer4Container {\\n  position: absolute;\\n  left: 410px;\\n  top: 60px;\\n  transform-origin: 0 0;\\n  transform: scale(0.25);\\n  background-color: white;\\n  width: 1440px;\\n  height: 500px;\\n}\\n\\n#Speedometer4 {\\n  width: 700px;\\n  height: 600px;\\n}\\n\\n#Speedometer5Container {\\n  position: absolute;\\n  left: 410px;\\n  top: 240px;\\n  transform-origin: 0 0;\\n  transform: scale(0.25);\\n  background-color: white;\\n  width: 1440px;\\n  height: 600px;\\n}\\n\\n#Speedometer5 {\\n  width: 700px;\\n  height: 500px;\\n  padding-top: 150px;\\n}\\n\\n#BarChart0Container {\\n  position: absolute;\\n  left: 410px;\\n  top: 470px;\\n  transform-origin: 0 0;\\n  transform: scale(0.25);\\n  background-color: white;\\n  width: 1440px;\\n  height: 1000px;\\n}\\n\\n#BarChart0 {\\n  width: 1000px;\\n  height: 1100px;\\n  padding-left: 520px;\\n  padding-top: 250px;\\n}\\n\\n#BarChart1Container {\\n  position: absolute;\\n  left: 25px;\\n  top: 58px;\\n  transform-origin: 0 0;\\n  transform: scale(0.25);\\n  background-color: white;\\n  width: 1440px;\\n  height: 500px;\\n}\\n\\n#BarChart1 {\\n  width: 1050px;\\n  height: 500px;\\n  padding-left: 390px;\\n  padding-top: 200px;\\n}\\n\\n#BarChart2Container {\\n  position: absolute;\\n  left: 25px;\\n  top: 218px;\\n  transform-origin: 0 0;\\n  transform: scale(0.25);\\n  background-color: white;\\n  width: 1440px;\\n  height: 600px;\\n}\\n\\n#BarChart2 {\\n  width: 1050px;\\n  height: 400px;\\n  padding-left: 390px;\\n  padding-top: 200px;\\n}\\n\\n#RadarChart0Container {\\n  position: absolute;\\n  left: 25px;\\n  top: 280px;\\n  transform-origin: 0 0;\\n  transform: scale(0.25);\\n  background-color: white;\\n  width: 1440px;\\n  height: 1350px;\\n}\\n\\n#RadarChart0 {\\n  width: 700px;\\n  height: 700px;\\n  padding-left: 660px;\\n  padding-top: 420px;\\n}\\n\\n#Speedometer6Container {\\n  position: absolute;\\n  left: 400px;\\n  top: 130px;\\n  transform-origin: 0 0;\\n  transform: scale(0.25);\\n  background-color: white;\\n  width: 760px;\\n  height: 600px;\\n}\\n\\n#Speedometer6 {\\n  width: 700px;\\n  height: 500px;\\n  padding-top: 110px;\\n}\\n\\n#Speedometer7Container {\\n  position: absolute;\\n  left: 590px;\\n  top: 130px;\\n  transform-origin: 0 0;\\n  transform: scale(0.25);\\n  background-color: white;\\n  width: 700px;\\n  height: 600px;\\n}\\n\\n#Speedometer7 {\\n  width: 700px;\\n  height: 500px;\\n  padding-top: 110px;\\n}\\n\\n#BarChart3Container {\\n  position: absolute;\\n  left: 410px;\\n  top: 402px;\\n  transform-origin: 0 0;\\n  transform: scale(0.25);\\n  background-color: white;\\n  width: 1455px;\\n  height: 1000px;\\n}\\n\\n#BarChart3 {\\n  width: 1000px;\\n  height: 1100px;\\n  padding-left: 520px;\\n  padding-top: 250px;\\n}\\n\\n#BarChart4Container {\\n  position: absolute;\\n  left: 25px;\\n  top: 60px;\\n  transform-origin: 0 0;\\n  transform: scale(0.25);\\n  background-color: white;\\n  width: 1440px;\\n  height: 600px;\\n}\\n\\n#BarChart4 {\\n  width: 1050px;\\n  height: 500px;\\n  padding-left: 400px;\\n  padding-top: 260px;\\n}\\n\\n#BarChart5Container {\\n  position: absolute;\\n  left: 19px;\\n  top: 230px;\\n  transform-origin: 0 0;\\n  transform: scale(0.25);\\n  background-color: white;\\n  width: 1440px;\\n  height: 700px;\\n}\\n\\n#BarChart5 {\\n  width: 1050px;\\n  height: 500px;\\n  padding-left: 400px;\\n  padding-top: 240px;\\n}\\n\\n#BarChart6Container {\\n  position: absolute;\\n  left: 25px;\\n  top: 425px;\\n  transform-origin: 0 0;\\n  transform: scale(0.25);\\n  background-color: white;\\n  width: 1440px;\\n  height: 700px;\\n}\\n\\n#BarChart6 {\\n  width: 1050px;\\n  height: 500px;\\n  padding-left: 400px;\\n  padding-top: 240px;\\n}\\n\\n#RadarChart1Container {\\n  position: absolute;\\n  left: 410px;\\n  top: 180px;\\n  transform-origin: 0 0;\\n  transform: scale(0.25);\\n  background-color: white;\\n  width: 1440px;\\n  height: 1250px;\\n}\\n\\n#RadarChart1 {\\n  width: 1200px;\\n  height: 1200px;\\n  padding-left: 90px;\\n  /* padding-top: 220px; */\\n}\\n\\n#Speedometer0ExtraContainer0 {\\n  position: absolute;\\n  left: 565px;\\n  top: 430px;\\n  width: 80px;\\n  height: 70px;\\n}\\n\\n#Speedometer1ExtraContainer0 {\\n  position: absolute;\\n  left: 178px;\\n  top: 190px;\\n  width: 80px;\\n  height: 70px;\\n}\\n\\n#Speedometer3ExtraContainer0 {\\n  position: absolute;\\n  left: 295px;\\n  top: 420px;\\n  width: 80px;\\n  height: 70px;\\n}\\n\\n#Speedometer4ExtraContainer0 {\\n  position: absolute;\\n  left: 577px;\\n  top: 65px;\\n  width: 80px;\\n  height: 70px;\\n}\\n\\n#Speedometer5ExtraContainer0 {\\n  position: absolute;\\n  left: 560px;\\n  top: 250px;\\n  width: 80px;\\n  height: 70px;\\n}\\n\\n#BarChart0ExtraContainer0 {\\n  position: absolute;\\n  left: 425px;\\n  top: 562px;\\n  width: 80px;\\n  height: 70px;\\n}\\n\\n#BarChart1ExtraContainer0 {\\n  position: absolute;\\n  left: 25px;\\n  top: 167px;\\n  width: 80px;\\n  height: 70px;\\n}\\n\\n#BarChart2ExtraContainer0 {\\n  position: absolute;\\n  left: 25px;\\n  top: 333px;\\n  width: 80px;\\n  height: 70px;\\n}\\n\\n#RadarChart0ExtraContainer0 {\\n  position: absolute;\\n  left: 25px;\\n  top: 570px;\\n  width: 80px;\\n  height: 70px;\\n}\\n\\n#Speedometer6ExtraContainer0 {\\n  position: absolute;\\n  left: 535px;\\n  top: 127px;\\n  width: 80px;\\n  height: 70px;\\n}\\n\\n#BarChart3ExtraContainer0 {\\n  position: absolute;\\n  left: 425px;\\n  top: 502px;\\n  width: 80px;\\n  height: 70px;\\n}\\n\\n#BarChart4ExtraContainer0 {\\n  position: absolute;\\n  left: 25px;\\n  top: 182px;\\n  width: 80px;\\n  height: 70px;\\n}\\n\\n#BarChart5ExtraContainer0 {\\n  position: absolute;\\n  left: 25px;\\n  top: 362px;\\n  width: 80px;\\n  height: 70px;\\n}\\n\\n#BarChart6ExtraContainer0 {\\n  position: absolute;\\n  left: 25px;\\n  top: 562px;\\n  width: 80px;\\n  height: 70px;\\n}\\n\\n#RadarChart1ExtraContainer0 {\\n  position: absolute;\\n  left: 425px;\\n  top: 482px;\\n  width: 80px;\\n  height: 70px;\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import AsyncStorage from '@react-native-async-storage/async-storage'\nimport {\n  ColorMode, extendTheme, StorageManager\n} from 'native-base'\nimport 'react-native-gesture-handler'\n\nexport const colorModeManager: StorageManager = {\n  get: async () => {\n    try {\n      const val = await AsyncStorage.getItem('@color-mode')\n      return val === 'dark' ? 'dark' : 'light'\n    } catch (e) {\n      return 'light'\n    }\n  },\n  set: async (value: ColorMode) => {\n    try {\n      await AsyncStorage.setItem('@color-mode', value)\n    } catch (e) {\n      console.log(e)\n    }\n  },\n}\n\nexport const NATIVE_BASE_CONFIG = {\n  dependencies: {\n    'linear-gradient': require('expo-linear-gradient').LinearGradient,\n  },\n  theme: extendTheme({\n    config: { initialColorMode: 'dark' },\n    colors: {\n      primary: {\n        50: '#dff1ff',\n        100: '#b1d2ff',\n        200: '#81b4fd',\n        300: '#5197f9',\n        400: '#2279f6',\n        500: '#095fdd',\n        600: '#014aad',\n        700: '#00357d',\n        800: '#00204e',\n        900: '#000b20',\n      },\n    },\n    components: {\n      Button: {\n        // Can simply pass default props to change default behaviour of components.\n        baseStyle: {\n          // rounded: 'md',\n        },\n        defaultProps: {\n\n        },\n        variants: {\n          linearGradient: () => ({\n            p: 0,\n            _stack: {\n              p: 2,\n              bg: {\n                linearGradient: {\n                  colors: ['violet.800', 'lightBlue.300'],\n                  start: [0, 0],\n                  end: [1, 0],\n                },\n              },\n              rounded: 'lg',\n            },\n            rounded: 'lg',\n          }),\n        },\n      },\n    },\n  }),\n}\n","export const BRAND_COLORS_MAP = {\n  blue: '#18376D',\n  orange: '#F57F17',\n  lightBlue: '#B8CCE4',\n  cream: 'rgb(245, 239, 228)',\n  grean: '#32a866',\n}\n// export const BRAND_COLORS_MAP = {\n//   blue: '#203c65',\n//   orange: '#d58941',\n//   lightBlue: '#99a2bd',\n// }\n\nexport const BRAND_COLORS = Object.values(BRAND_COLORS_MAP).sort()\n\nexport const KEYS = ['FONDS', 'VERGELIJKBARE PENSIOENFONDSEN', 'ALLE DEELNEMENDE PENSIOENFONDSEN']\n\nexport const DATA = {\n  html: '',\n  Speedometer: {\n    values: [\n      {\n        value: 100,\n        label: KEYS[0],\n        needleColor: BRAND_COLORS[0],\n      },\n      {\n        value: 200,\n        label: KEYS[1],\n        needleColor: BRAND_COLORS[1],\n      },\n      {\n        value: 300,\n        label: KEYS[2],\n        needleColor: BRAND_COLORS[2],\n      },\n    ],\n    segments: [\n      {\n        // text: KEYS[0],\n        value: 119,\n        color: BRAND_COLORS[0],\n      },\n      {\n        // text: KEYS[1],\n        value: 69,\n        color: BRAND_COLORS[1],\n      },\n      {\n        // text: KEYS[2],\n        value: 495,\n        color: BRAND_COLORS[2],\n      },\n    ],\n  },\n  PieChart: [\n    {\n      id: KEYS[0],\n      label: KEYS[0],\n      value: 119,\n      color: BRAND_COLORS[0],\n    },\n    {\n      id: KEYS[1],\n      label: KEYS[1],\n      value: 69,\n      color: BRAND_COLORS[1],\n    },\n    {\n      id: KEYS[2],\n      label: KEYS[2],\n      value: 495,\n      color: BRAND_COLORS[2],\n    },\n  ],\n  RadarChart: [\n    {\n      [KEYS[0]]: 10,\n      [KEYS[1]]: 60,\n      [KEYS[2]]: 32,\n      color: BRAND_COLORS[0],\n    },\n    {\n      [KEYS[0]]: 20,\n      [KEYS[1]]: 70,\n      [KEYS[2]]: 72,\n      color: BRAND_COLORS[1],\n    },\n    {\n      [KEYS[0]]: 30,\n      [KEYS[1]]: 28,\n      [KEYS[2]]: 75,\n      color: BRAND_COLORS[2],\n    },\n  ],\n  BarChart: [\n    {\n      country: 'AD',\n      [KEYS[0]]: 24,\n      [`${KEYS[0]}Color`]: BRAND_COLORS[0],\n      [KEYS[1]]: 187,\n      [`${KEYS[1]}Color`]: BRAND_COLORS[1],\n      [KEYS[2]]: 86,\n      [`${KEYS[2]}Color`]: BRAND_COLORS[2],\n    },\n  ],\n  HalfPieChart: [\n    {\n      id: KEYS[0],\n      label: KEYS[0],\n      value: 119,\n      color: BRAND_COLORS[0],\n    },\n    {\n      id: KEYS[1],\n      label: KEYS[1],\n      value: 69,\n      color: BRAND_COLORS[1],\n    },\n    {\n      id: KEYS[2],\n      label: KEYS[2],\n      value: 495,\n      color: BRAND_COLORS[2],\n    },\n  ],\n}\n\n// html: `<!DOCTYPE html>\n// <html>\n// <head>\n// <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n// <style>\n// .card {\n//   box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n//   transition: 0.3s;\n//   width: 500px;\n//   height: 500px;\n// }\n\n// .card:hover {\n//   box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);\n// }\n\n// .container {\n//   padding: 2px 16px;\n// }\n\n// .content {\n//   max-width: 500px;\n//   margin: auto;\n// }\n// </style>\n// </head>\n// <body>\n// <div class=\"content\">\n//   <h2>Speedometer</h2>\n\n//   <div id=\"Speedometer\" class=\"card\">\n//   </div>\n\n//   <h2>PieChart</h2>\n\n//   <div id=\"PieChart\" class=\"card\">\n\n//   </div>\n//   <h2>RadarChart</h2>\n\n//   <div id=\"RadarChart\" class=\"card\">\n\n//   </div>\n//   <h2>BarChart</h2>\n\n//   <div id=\"BarChart\" class=\"card\">\n\n//   </div>\n//   <h2>HalfPieChart</h2>\n\n//   <div id=\"HalfPieChart\" class=\"card\">\n\n//   </div>\n// </div>\n\n// </body>\n// </html> `,\n","import { useTheme, useColorMode } from 'native-base'\n\nexport const useChartTheme = () => {\n  const theme = useTheme()\n  const { colorMode } = useColorMode()\n  return [\n    {\n      background: theme.colors[colorMode]['50'],\n      textColor: theme.colors[colorMode]['900'],\n      fontSize: 11,\n      axis: {\n        domain: {\n          line: {\n            stroke: theme.colors[colorMode]['900'],\n            strokeWidth: 1,\n          },\n        },\n        ticks: {\n          line: {\n            stroke: theme.colors[colorMode]['900'],\n            strokeWidth: 1,\n          },\n        },\n      },\n      grid: {\n        line: {\n          stroke: theme.colors[colorMode]['900'],\n          strokeWidth: 1,\n        },\n      },\n    },\n    colorMode,\n  ]\n}\n\nexport const BRAND_COLORS_MAP = {\n  blue: '#203c65',\n  orange: '#d58941',\n  lightBlue: '#99a2bd',\n}\n\nexport const BRAND_COLORS = Object.values(BRAND_COLORS_MAP).sort()\n\nexport const KEYS = ['FONDS', 'VERGELIJKBARE PENSIOENFONDSEN', 'ALLE DEELNEMENDE PENSIOENFONDSEN']\n","import React from 'react'\nimport { ResponsivePie } from '@nivo/pie'\nimport { BRAND_COLORS, KEYS, RESPONSIVE_CHARTS } from '@constants'\nimport { useChartTheme } from './utils'\n\nexport default (props) => {\n  const { data } = props\n  const [chartTheme] = useChartTheme()\n  return (\n    <ResponsivePie\n      data={data}\n      theme={chartTheme}\n      colors={{ datum: 'data.color' }}\n      margin={{\n        top: 40, right: 80, bottom: 80, left: 80,\n      }}\n      innerRadius={0.5}\n      padAngle={0.7}\n      cornerRadius={3}\n      activeOuterRadiusOffset={8}\n      borderWidth={1}\n      borderColor={{ from: 'color', modifiers: [['darker', 0.2]] }}\n      arcLinkLabelsSkipAngle={10}\n      arcLinkLabelsThickness={2}\n      arcLinkLabelsColor={{ from: 'color' }}\n      arcLabelsSkipAngle={10}\n      arcLabelsTextColor={{ theme: 'labels.text.fill' }}\n      // arcLabelsTextColor={{ from: 'color', modifiers: [['darker', 2]] }}\n      defs={[\n        {\n          id: 'dots',\n          type: 'patternDots',\n          background: 'inherit',\n          color: 'rgba(255, 255, 255, 0.3)',\n          size: 4,\n          padding: 1,\n          stagger: true,\n        },\n        {\n          id: 'lines',\n          type: 'patternLines',\n          background: 'inherit',\n          color: 'rgba(255, 255, 255, 0.3)',\n          rotation: -45,\n          lineWidth: 6,\n          spacing: 10,\n        },\n      ]}\n      fill={[\n        {\n          match: {\n            id: 'ruby',\n          },\n          id: 'dots',\n        },\n        {\n          match: {\n            id: 'c',\n          },\n          id: 'dots',\n        },\n        {\n          match: {\n            id: 'go',\n          },\n          id: 'dots',\n        },\n        {\n          match: {\n            id: 'python',\n          },\n          id: 'dots',\n        },\n        {\n          match: {\n            id: 'scala',\n          },\n          id: 'lines',\n        },\n        {\n          match: {\n            id: 'lisp',\n          },\n          id: 'lines',\n        },\n        {\n          match: {\n            id: 'elixir',\n          },\n          id: 'lines',\n        },\n        {\n          match: {\n            id: 'javascript',\n          },\n          id: 'lines',\n        },\n      ]}\n      // legends={[\n      //   {\n      //     anchor: 'top-left',\n      //     direction: 'column',\n      //     translateX: -50,\n      //     translateY: -40,\n      //     itemWidth: 80,\n      //     itemHeight: 20,\n      //     itemTextColor: '#999',\n      //     symbolSize: 12,\n      //     symbolShape: 'circle',\n      //     // effects: [\n      //     //   {\n      //     //     on: 'hover',\n      //     //     style: {\n      //     //       itemTextColor: '#000',\n      //     //     },\n      //     //   },\n      //     // ],\n      //   },\n      //   // {\n      //   //   anchor: 'top',\n      //   //   direction: 'column',\n      //   //   justify: false,\n      //   //   translateX: -250,\n      //   //   translateY: 0,\n      //   //   itemsSpacing: 0,\n      //   //   itemWidth: 100,\n      //   //   itemHeight: 18,\n      //   //   itemTextColor: '#999',\n      //   //   itemDirection: 'left-to-right',\n      //   //   itemOpacity: 1,\n      //   //   symbolSize: 18,\n      //   //   symbolShape: 'circle',\n      //   //   effects: [\n      //   //     {\n      //   //       on: 'hover',\n      //   //       style: {\n      //   //         itemTextColor: '#000',\n      //   //       },\n      //   //     },\n      //   //   ],\n      //   // },\n      // ]}\n    />\n  )\n}\n\nconst data = [\n  {\n    id: KEYS[0],\n    label: KEYS[0],\n    value: 119,\n    color: BRAND_COLORS[0],\n  },\n  {\n    id: KEYS[1],\n    label: KEYS[1],\n    value: 69,\n    color: BRAND_COLORS[1],\n  },\n  {\n    id: KEYS[2],\n    label: KEYS[2],\n    value: 495,\n    color: BRAND_COLORS[2],\n  },\n]\n","import React from 'react'\nimport { ResponsiveRadar } from '@nivo/radar'\nimport { BRAND_COLORS, KEYS } from '@constants'\nimport { useChartTheme } from './utils'\n\nexport default (props) => {\n  const { keys, data, colors } = props\n  const [chartTheme] = useChartTheme()\n  return (\n    <ResponsiveRadar\n      data={data}\n      theme={chartTheme}\n      keys={keys}\n      indexBy=\"type\"\n      maxValue=\"auto\"\n      margin={{\n        top: 70, right: 100, bottom: 40, left: 100,\n      }}\n      curve=\"linearClosed\"\n      gridLabel={LabelComponent}\n      borderWidth={2}\n      borderColor={{ from: 'color' }}\n      gridLevels={5}\n      gridShape=\"circular\"\n      gridLabelOffset={36}\n      enableDots\n      dotSize={10}\n      dotColor={{ theme: 'background' }}\n      dotBorderWidth={2}\n      dotBorderColor={{ from: 'color' }}\n      enableDotLabel\n      dotLabel=\"value\"\n      dotLabelYOffset={-12}\n      colors={(params) => {\n        const {\n          index,\n        } = params\n        return colors[index]\n      }}\n      fillOpacity={0.5}\n      // blendMode=\"multiply\"\n      animate\n      motionConfig=\"wobbly\"\n      isInteractive\n      // legends={[\n      //   {\n      //     anchor: 'top-left',\n      //     // data: [{}]\n      //     direction: 'column',\n      //     translateX: -50,\n      //     translateY: -40,\n      //     itemWidth: 80,\n      //     itemHeight: 20,\n      //     itemTextColor: '#999',\n      //     symbolSize: 12,\n      //     symbolShape: 'circle',\n      //     // effects: [\n      //     //   {\n      //     //     on: 'hover',\n      //     //     style: {\n      //     //       itemTextColor: '#000',\n      //     //     },\n      //     //   },\n      //     // ],\n      //   },\n      // ]}\n    />\n  )\n}\n\nconst data = [\n  {\n    [KEYS[0]]: 10,\n    [KEYS[1]]: 60,\n    [KEYS[2]]: 32,\n    color: BRAND_COLORS[0],\n  },\n  {\n    [KEYS[0]]: 20,\n    [KEYS[1]]: 70,\n    [KEYS[2]]: 72,\n    color: BRAND_COLORS[1],\n  },\n  {\n    [KEYS[0]]: 30,\n    [KEYS[1]]: 28,\n    [KEYS[2]]: 75,\n    color: BRAND_COLORS[2],\n  },\n]\n\nconst LabelComponent = ({ id, anchor }) => (\n  <g transform={`translate(${anchor === 'end' ? -60 : anchor === 'middle' ? -30 : 0}, -20)`}>\n    <text>{id}</text>\n    <text\n      y={24}\n      style={{\n        fontSize: 24,\n        fontWeight: 'bold',\n        fill: '#3a9896',\n      }}\n    >\n      {/* +\n      {Math.round(Math.random() * 100)}\n      % */}\n    </text>\n  </g>\n)\n","import React from 'react'\nimport { ResponsiveBar, BarDatum } from '@nivo/bar'\nimport { BRAND_COLORS, KEYS, BRAND_COLORS_MAP } from '@constants'\nimport { useChartTheme } from './utils'\n\nexport default (props) => {\n  const { keys, data, value } = props\n  const [chartTheme] = useChartTheme()\n  return (\n    <ResponsiveBar\n      // width: '100%',\n      height={250}\n      margin={{\n        top: 60, right: 110, bottom: 60, left: 80,\n      }}\n      data={data}\n      theme={chartTheme}\n      // data={data as BarDatum[]}\n      indexBy=\"type\"\n      keys={keys}\n      padding={0.2}\n  // labelTextColor={'inherit:darker(1.4)'}\n      labelTextColor={{ from: 'theme', theme: 'labels.text.fill' }}\n      labelSkipWidth={16}\n      labelSkipHeight={16}\n      colors={(c) => {\n        const {\n          id, data,\n        } = c\n        return data[`${id}Color`]\n      }}\n      layout=\"horizontal\"\n      enableGridY={false}\n      enableGridX\n      // legends={[\n      //   {\n      //     dataFrom: 'keys',\n      //     anchor: 'top-left',\n      //     direction: 'column',\n      //     translateX: -50,\n      //     translateY: -60,\n      //     itemWidth: 80,\n      //     itemHeight: 20,\n      //     itemTextColor: '#999',\n      //     symbolSize: 12,\n      //     symbolShape: 'circle',\n      //     // effects: [\n      //     //   {\n      //     //     on: 'hover',\n      //     //     style: {\n      //     //       itemTextColor: '#000',\n      //     //     },\n      //     //   },\n      //     // ],\n      //   },\n      // ]}\n      markers={[\n        {\n          axis: 'x',\n          value,\n          lineStyle: {\n            stroke: BRAND_COLORS_MAP.orange,\n            strokeWidth: 4,\n            strokeDasharray: '25, 3',\n          },\n          legend: '',\n          legendOrientation: 'horizontal',\n          legendPosition: 'top',\n        },\n      ]}\n    />\n  )\n}\n\nconst data = [\n  {\n    // country: 'AD',\n    [KEYS[0]]: 24,\n    [`${KEYS[0]}Color`]: BRAND_COLORS[0],\n    [KEYS[1]]: 187,\n    [`${KEYS[1]}Color`]: BRAND_COLORS[1],\n    [KEYS[2]]: 86,\n    [`${KEYS[2]}Color`]: BRAND_COLORS[2],\n  },\n]\n","import React from 'react'\nimport { ResponsivePie } from '@nivo/pie'\nimport { BRAND_COLORS, KEYS } from '@constants'\nimport { useChartTheme } from './utils'\n\nexport default (props) => {\n  const { data } = props\n  const [chartTheme] = useChartTheme()\n  return (\n    <ResponsivePie\n      data={data}\n      theme={chartTheme}\n      colors={{ datum: 'data.color' }}\n      margin={{\n        top: 40, right: 80, bottom: 80, left: 80,\n      }}\n      startAngle={90}\n      endAngle={-90}\n      innerRadius={0.5}\n      padAngle={0.7}\n      cornerRadius={3}\n      activeOuterRadiusOffset={8}\n      borderWidth={1}\n      borderColor={{ from: 'color', modifiers: [['darker', 0.2]] }}\n      arcLinkLabelsSkipAngle={10}\n      arcLinkLabelsThickness={2}\n      arcLinkLabelsColor={{ from: 'color' }}\n      arcLabelsSkipAngle={10}\n      // arcLabelsTextColor={{ from: 'color', modifiers: [['darker', 2]] }}\n      arcLabelsTextColor={{ theme: 'labels.text.fill' }}\n      defs={[\n        {\n          id: 'dots',\n          type: 'patternDots',\n          background: 'inherit',\n          color: 'rgba(255, 255, 255, 0.3)',\n          size: 4,\n          padding: 1,\n          stagger: true,\n        },\n        {\n          id: 'lines',\n          type: 'patternLines',\n          background: 'inherit',\n          color: 'rgba(255, 255, 255, 0.3)',\n          rotation: -45,\n          lineWidth: 6,\n          spacing: 10,\n        },\n      ]}\n      fill={[\n        {\n          match: {\n            id: 'ruby',\n          },\n          id: 'dots',\n        },\n        {\n          match: {\n            id: 'c',\n          },\n          id: 'dots',\n        },\n        {\n          match: {\n            id: 'go',\n          },\n          id: 'dots',\n        },\n        {\n          match: {\n            id: 'python',\n          },\n          id: 'dots',\n        },\n        {\n          match: {\n            id: 'scala',\n          },\n          id: 'lines',\n        },\n        {\n          match: {\n            id: 'lisp',\n          },\n          id: 'lines',\n        },\n        {\n          match: {\n            id: 'elixir',\n          },\n          id: 'lines',\n        },\n        {\n          match: {\n            id: 'javascript',\n          },\n          id: 'lines',\n        },\n      ]}\n      legends={[\n        {\n          anchor: 'top-left',\n          direction: 'column',\n          translateX: -50,\n          translateY: -40,\n          itemWidth: 80,\n          itemHeight: 20,\n          itemTextColor: '#999',\n          symbolSize: 12,\n          symbolShape: 'circle',\n          // effects: [\n          //   {\n          //     on: 'hover',\n          //     style: {\n          //       itemTextColor: '#000',\n          //     },\n          //   },\n          // ],\n        },\n      ]}\n    />\n  )\n}\n\nconst data = [\n  {\n    id: KEYS[0],\n    label: KEYS[0],\n    value: 119,\n    color: BRAND_COLORS[0],\n  },\n  {\n    id: KEYS[1],\n    label: KEYS[1],\n    value: 69,\n    color: BRAND_COLORS[1],\n  },\n  {\n    id: KEYS[2],\n    label: KEYS[2],\n    value: 495,\n    color: BRAND_COLORS[2],\n  },\n]\n","import _isNumber from 'lodash-es/isNumber'\nimport _sum from 'lodash-es/sum'\nimport isEmpty from 'lodash-es/isEmpty'\nimport isArray from 'lodash-es/isArray'\nimport _head from 'lodash-es/head'\nimport _last from 'lodash-es/last'\nimport _drop from 'lodash-es/drop'\nimport _times from 'lodash-es/times'\nimport _take from 'lodash-es/take'\n\nimport { scaleLinear as d3ScaleLinear } from 'd3'\n\n// helper function to calculate array sum till specified index\nexport function sumArrayTill(array, index) {\n  return _sum(_take(array, index))\n}\n\n// helper function to calculate segment stops\n// if custom segment stops is given does the following validation\n// first elem === min\n// last elem === max\n// if valid, massages custom segment stops into valid tick data\n// if custom segment stop is not given\nexport function calculateSegmentStops({\n  tickData,\n  customSegmentStops,\n  min,\n  max,\n}) {\n  if (!isArray(customSegmentStops) || isEmpty(customSegmentStops)) {\n    // return existing tick data\n    return tickData\n  }\n  // there is some custom segment stop\n  // let us do the validation\n\n  // first element should be equivalent to min\n  // if (_head(customSegmentStops) !== min) {\n  //   throw new Error(\n  //     `First value should be equivalent to min value given. Current min value - ${min}`\n  //   )\n  // }\n\n  // last element shuold be equivalent to max\n  // if (_last(customSegmentStops) !== max) {\n  //   throw new Error(\n  //     `Last value should be equivalent to max value given. Current min value - ${max}`\n  //   )\n  // }\n\n  // looks like we have a valid custom segment stop, let us massage the data\n  // construct the relative difference values\n  const relative_difference = customSegmentStops.map((current_stop, index) => {\n    if (index === 0) {\n      // ignore\n      return\n    }\n    return (current_stop - customSegmentStops[index - 1]) / (max - min)\n  })\n\n  return _drop(relative_difference)\n}\n\n// export validators\nexport function calculateNeedleHeight({ heightRatio, radius }) {\n  if (heightRatio < 0 || heightRatio > 1) {\n    throw new Error(`Invalid needleHeightRatio given - ${heightRatio}`)\n  }\n  return Math.round(radius * heightRatio)\n}\n\nexport function calculateSegmentLabelCount({\n  maxSegmentLabelCount,\n  segmentCount,\n}) {\n  const max_segment_label_count = parseInt(maxSegmentLabelCount, 10)\n  const segments_count = parseInt(segmentCount, 10)\n\n  return _isNumber(max_segment_label_count) &&\n    max_segment_label_count >= 0 &&\n    max_segment_label_count <= segments_count\n    ? max_segment_label_count\n    : segments_count\n}\n\n// calculate d3 scale\nexport function calculateScale({ min, max, segments }) {\n  return d3ScaleLinear().range([0, 1]).domain([min, max])\n}\n\n// calculate ticks\nexport function calculateTicks(scale, { min, max, segments }) {\n  let ticks = []\n  ticks = scale.ticks(segments)\n  // [d3-scale][issue]: https://github.com/d3/d3-scale/issues/149\n\n  const normalize_ticks =\n    (_last(ticks) !== max || segments < ticks.length) && ticks.length > 1\n\n  if (normalize_ticks) {\n    // let us split it ourselves\n    const diff = (max - min) / segments\n    ticks = [min]\n    _times(segments, i => {\n      ticks.push(min + (i + 1) * diff)\n    })\n  }\n\n  if (ticks.length === 1) {\n    // we have this specific `d3 ticks` behaviour stepping in a specific way\n    ticks = [min, max]\n  }\n\n  return ticks\n}\n\n// formats current value\n// ref: https://stackoverflow.com/a/29771751/1410291\nexport function formatCurrentValueText(currentValue, config) {\n  // get the current value\n  const value = config.labelFormat(currentValue)\n  // get the current placeholder style\n  const placeholderStyle = config.currentValuePlaceholderStyle\n\n  // replace the placeholder style in current text\n  return config.currentValueText.replace(placeholderStyle, value)\n}\n\nexport function deg2rad(deg) {\n  return (deg * Math.PI) / 180\n}\n\nexport function centerTranslation(r, paddingHorizontal, paddingVertical) {\n  return `translate(${r + paddingHorizontal}, ${r + paddingVertical})`\n}\n\nexport function getRadius(config) {\n  return config.width / 2\n}\n","export const CustomSegmentLabelPosition = {\n  Inside: 'INSIDE',\n  Outside: 'OUTSIDE',\n}\n\nexport const Transition = {\n  easeLinear: 'easeLinear',\n  easeQuadIn: 'easeQuadIn',\n  easeQuadOut: 'easeQuadOut',\n  easeQuadInOut: 'easeQuadInOut',\n  easeCubicIn: 'easeCubicIn',\n  easeCubicOut: 'easeCubicOut',\n  easeCubicInOut: 'easeCubicInOut',\n  easePolyIn: 'easePolyIn',\n  easePolyOut: 'easePolyOut',\n  easePolyInOut: 'easePolyInOut',\n  easeSinIn: 'easeSinIn',\n  easeSinOut: 'easeSinOut',\n  easeSinInOut: 'easeSinInOut',\n  easeExpIn: 'easeExpIn',\n  easeExpOut: 'easeExpOut',\n  easeExpInOut: 'easeExpInOut',\n  easeCircleIn: 'easeCircleIn',\n  easeCircleOut: 'easeCircleOut',\n  easeCircleInOut: 'easeCircleInOut',\n  easeBounceIn: 'easeBounceIn',\n  easeBounceOut: 'easeBounceOut',\n  easeBounceInOut: 'easeBounceInOut',\n  easeBackIn: 'easeBackIn',\n  easeBackOut: 'easeBackOut',\n  easeBackInOut: 'easeBackInOut',\n  easeElasticIn: 'easeElasticIn',\n  easeElasticOut: 'easeElasticOut',\n  easeElasticInOut: 'easeElasticInOut',\n  easeElastic: 'easeElastic',\n}\n","import {\n  scaleQuantize as d3ScaleQuantize,\n  interpolateHsl as d3InterpolateHsl,\n  rgb as d3Rgb,\n  format as d3Format,\n} from 'd3'\nimport { calculateSegmentLabelCount } from '../util/'\nimport { Transition } from '../../core/enums'\n\n// default props\nexport const DEFAULT_PROPS = {\n  value: 0,\n  minValue: 0,\n  maxValue: 1000,\n\n  forceRender: false,\n\n  width: 300,\n  height: 300,\n  paddingHorizontal: 0,\n  paddingVertical: 0,\n\n  fluidWidth: false,\n  dimensionUnit: 'px',\n\n  // segments to show in the speedometer\n  segments: 5,\n  // maximum segment label to be shown\n  maxSegmentLabels: -1,\n  customSegmentStops: [],\n\n  // custom segment labels\n  customSegmentLabels: [],\n\n  // color strings\n  needleColor: 'steelblue',\n  startColor: '#FF471A',\n  endColor: '#33CC33',\n  // custom segment colors; by default off\n  segmentColors: [],\n\n  // needle transition type and duration\n  // needleTransition: \"easeQuadInOut\",\n  needleTransition: Transition.easeQuadInOut,\n  needleTransitionDuration: 500,\n  needleHeightRatio: 0.9,\n\n  ringWidth: 60,\n\n  // text color (for both showing current value and segment values)\n  textColor: '#666',\n\n  // label format => https://github.com/d3/d3-format\n  // by default \"\"; takes valid input for d3 format\n  valueFormat: '',\n\n  // value text string format; by default it just shows the value\n  // takes es6 template string as input with a default ${value}\n  currentValueText: '${value}',\n  // specifies the style of the placeholder for current value\n  // change it some other format like \"#{value}\" and use it in current value text as => \"Current Value: #{value}\"\n  currentValuePlaceholderStyle: '${value}',\n\n  // font sizes (and other styles)\n  labelFontSize: '14px',\n  valueTextFontSize: '16px',\n  valueTextFontWeight: 'bold', // any valid font weight string\n}\n\n// default config\nconst DEFAULT_CONFIG = {\n  ringInset: 20,\n\n  pointerWidth: 10,\n  pointerTailLength: 5,\n\n  minAngle: -90,\n  maxAngle: 90,\n\n  labelInset: 10,\n}\n\nexport const getConfig = ({ PROPS, parentWidth, parentHeight }) => {\n  const config = {\n    // width/height config\n    // if fluidWidth; width/height taken from the parent of the ReactSpeedometer\n    // else if width/height given it is used; else our default\n    width: PROPS.fluidWidth ? parentWidth : PROPS.width,\n    height: PROPS.fluidWidth ? parentHeight : PROPS.height,\n\n    // text padding horizontal/vertical\n    paddingHorizontal: PROPS.paddingHorizontal,\n    paddingVertical: PROPS.paddingVertical,\n\n    // width/height dimension unit ... default \"px\"\n    dimensionUnit: PROPS.dimensionUnit,\n\n    // ring width should be 1/4 th of width\n    ringWidth: PROPS.ringWidth,\n    // min/max values\n    minValue: PROPS.minValue,\n    maxValue: PROPS.maxValue,\n    // color of the speedometer needle\n    needleColor: PROPS.needleColor,\n    // segments in the speedometer\n    majorTicks: PROPS.segments,\n    // custom segment points\n    customSegmentStops: PROPS.customSegmentStops,\n\n    // custom segment labels\n    customSegmentLabels: PROPS.customSegmentLabels,\n\n    // max segment labels\n    maxSegmentLabels: calculateSegmentLabelCount({\n      maxSegmentLabelCount: PROPS.maxSegmentLabels,\n      segmentCount: PROPS.segments,\n    }),\n    segmentColors: PROPS.segmentColors,\n    // color range for the segments\n    arcColorFn:\n      PROPS.segmentColors.length > 0\n        ? d3ScaleQuantize(PROPS.segmentColors)\n        : d3InterpolateHsl(d3Rgb(PROPS.startColor), d3Rgb(PROPS.endColor)),\n    // needle configuration\n    needleTransition: PROPS.needleTransition,\n    needleTransitionDuration: PROPS.needleTransitionDuration,\n    needleHeightRatio: PROPS.needleHeightRatio,\n    // text color\n    textColor: PROPS.textColor,\n    // label format\n    labelFormat: d3Format(PROPS.valueFormat),\n    // value text string (template string)\n    currentValueText: PROPS.currentValueText,\n    // placeholder style for 'currentValue'\n    currentValuePlaceholderStyle: PROPS.currentValuePlaceholderStyle,\n\n    // font sizes (and other styles)\n    labelFontSize: PROPS.labelFontSize,\n    valueTextFontSize: PROPS.valueTextFontSize,\n    valueTextFontWeight: PROPS.valueTextFontWeight,\n    needles: PROPS.needles,\n  }\n\n  return Object.assign({}, DEFAULT_CONFIG, config)\n}\n\nexport const updateConfig = (config, params) => {\n  return {\n    ...config,\n    ...params,\n  }\n}\n","import memoizeOne from 'memoize-one'\nimport { range as d3Range, arc as d3Arc } from 'd3'\nimport {\n  deg2rad,\n  sumArrayTill,\n  calculateScale,\n  calculateTicks,\n  calculateSegmentStops,\n} from '../util'\n\n// export memoized functions\nexport const configureScale = memoizeOne(_configureScale)\nexport const configureTicks = memoizeOne(_configureTicks)\nexport const configureTickData = memoizeOne(_configureTickData)\nexport const configureArc = memoizeOne(_configureArc)\n\nfunction _configureScale(config) {\n  return calculateScale({\n    min: config.minValue,\n    max: config.maxValue,\n    segments: config.maxSegmentLabels,\n  })\n}\n\nfunction _configureTicks(config) {\n  const scale = configureScale(config)\n\n  let ticks = calculateTicks(scale, {\n    min: config.minValue,\n    max: config.maxValue,\n    segments: config.maxSegmentLabels,\n  })\n\n  if (config.customSegmentStops.length > 0 && config.maxSegmentLabels !== 0) {\n    ticks = config.customSegmentStops\n  }\n\n  return ticks\n}\n\nfunction _configureTickData(config) {\n  const defaultTickData = d3Range(config.majorTicks).map(d => {\n    return 1 / config.majorTicks\n  })\n\n  const tickData = calculateSegmentStops({\n    tickData: defaultTickData,\n    customSegmentStops: config.customSegmentStops,\n    min: config.minValue,\n    max: config.maxValue,\n  })\n\n  return tickData\n}\n\nfunction _configureArc(config) {\n  const tickData = configureTickData(config)\n\n  const range = config.maxAngle - config.minAngle\n  const r = config.width / 2\n\n  const arc = d3Arc()\n    .innerRadius(r - config.ringWidth - config.ringInset)\n    .outerRadius(r - config.ringInset)\n    .startAngle((d, i) => {\n      const ratio = sumArrayTill(tickData, i)\n      return deg2rad(config.minAngle + ratio * range)\n    })\n    .endAngle((d, i) => {\n      const ratio = sumArrayTill(tickData, i + 1)\n      return deg2rad(config.minAngle + ratio * range)\n    })\n\n  return arc\n}\n","import {\n  select as d3Select,\n  line as d3Line,\n  curveMonotoneX as d3CurveMonotoneX,\n} from 'd3'\n\nimport isEmpty from 'lodash-es/isEmpty'\nimport isArray from 'lodash-es/isArray'\n\nimport {\n  centerTranslation,\n  getRadius,\n  calculateNeedleHeight,\n  formatCurrentValueText,\n  sumArrayTill,\n} from '../util'\nimport { getNeedleTransition } from '../util/get-needle-transition'\nimport {\n  configureArc,\n  configureTicks,\n  configureTickData,\n  configureScale,\n} from '../config/configure'\n\nexport const update = ({ d3_refs, newValue, config }) => {\n  const scale = configureScale(config)\n  const range = config.maxAngle - config.minAngle\n\n  // update the pointer\n  d3_refs.pointer.map((item, i) => {\n    const needle = config.needles[i]\n    const ratio = scale(needle.value)\n    const newAngle = config.minAngle + ratio * range\n    item\n      .transition()\n      .duration(config.needleTransitionDuration)\n      .ease(getNeedleTransition(config.needleTransition))\n      .attr('transform', `rotate(${newAngle})`)\n  })\n\n  d3_refs.current_value_text.map((item) => item.text(formatCurrentValueText(newValue, config)))\n}\n\nexport const render = ({ container, config }) => {\n  const r = getRadius(config)\n  const centerTx = centerTranslation(\n    r,\n    config.paddingHorizontal,\n    config.paddingVertical,\n  )\n\n  const svg = _renderSVG({ container, config })\n\n  _renderArcs({ config, svg, centerTx })\n  if (config.labelsEnabled) {\n    _renderLabels({\n      config, svg, centerTx, r,\n    })\n  }\n  return {\n    current_value_text: config.needles.map(\n      (needleProps) => _renderCurrentValueText({\n        config: {\n          ...config,\n          ...needleProps,\n        },\n        svg,\n      }),\n    ),\n    pointer: config.needles.map(\n      (needleProps) => _renderNeedle({\n        config: {\n          ...config,\n          ...needleProps,\n          needleColor: needleProps.color,\n        },\n        svg,\n        r,\n        centerTx,\n      }),\n    ),\n  }\n}\n\n// helper function to render individual parts of gauge\nfunction _renderSVG({ container, config }) {\n  // calculate width and height\n  const width = config.width + 2 * config.paddingHorizontal\n  const height = config.height + 2 * config.paddingVertical\n\n  return (\n    d3Select(container)\n      .append('svg:svg')\n      .attr('class', 'speedometer')\n      .attr('width', `${width}${config.dimensionUnit}`)\n      .attr('height', `${height}${config.dimensionUnit}`)\n      // use inline styles so that width/height is not overridden\n      .style('width', `${width}${config.dimensionUnit}`)\n      .style('height', `${height}${config.dimensionUnit}`)\n  )\n}\n\nfunction _renderArcs({ config, svg, centerTx }) {\n  const tickData = configureTickData(config)\n  const arc = configureArc(config)\n\n  const arcs = svg.append('g').attr('class', 'arc').attr('transform', centerTx)\n\n  arcs\n    .selectAll('path')\n    .data(tickData)\n    .enter()\n    .append('path')\n    .attr('class', 'speedo-segment')\n    .attr('fill', (d, i) => {\n      // if custom segment colors is present just use it\n      if (!isEmpty(config.segmentColors) && config.segmentColors[i]) {\n        return config.segmentColors[i]\n      }\n\n      return config.arcColorFn(d * i)\n    })\n    .attr('d', arc)\n}\n\nexport function _renderLabels({\n  config, svg, centerTx, r,\n}) {\n  const ticks = configureTicks(config)\n  const tickData = configureTickData(config)\n  const scale = configureScale(config)\n  const range = config.maxAngle - config.minAngle\n\n  // assuming we have the custom segment labels here\n  const { customSegmentLabels } = config\n\n  const isCustomLabelsPresent = isArray(customSegmentLabels) && !isEmpty(customSegmentLabels)\n  const isCustomLabelsValid = isCustomLabelsPresent && customSegmentLabels.length === tickData.length\n  // if custom labels present and not valid\n  if (isCustomLabelsPresent && !isCustomLabelsValid) {\n    throw new Error(\n      `Custom Segment Labels should be an array with length of ${tickData.length}`,\n    )\n  }\n  const renderNeedleLabels = () => {\n    const lg = svg.append('g').attr('class', 'label').attr('transform', centerTx)\n\n    const updatedConfig = {\n      ...config,\n      customSegmentStops: config.needles.map((item) => item.value),\n    }\n    const ticks = configureTicks(updatedConfig)\n    const tickData = configureTickData(updatedConfig)\n    lg.selectAll('text')\n      .data(ticks)\n      .enter()\n      .append('text')\n      .attr('transform', (d, i) => {\n        const ratio = updatedConfig.customSegmentStops.length === 0\n          ? scale(d)\n          : sumArrayTill(tickData, i)\n\n        const newAngle = config.minAngle + ratio * range\n\n        return `rotate(${-newAngle - 38}) translate(${config.labelInset - r - 150}, 0)`\n      })\n      .text((d, i) => config.needles[i].label)\n    // add class for text label\n      .attr('class', 'segment-value')\n    // styling stuffs\n      .style('text-anchor', 'middle')\n      .style('font-size', config.needleLabelFontSize ?? 10)\n      .style('font-weight', 'bold')\n    // .style(\"fill\", \"#666\");\n      .style('fill', config.textColor)\n  }\n  renderNeedleLabels()\n  // we have valid custom labels\n  if (isCustomLabelsPresent && isCustomLabelsValid) {\n    _renderCustomSegmentLabels({\n      config,\n      svg,\n      centerTx,\n      r,\n      ticks,\n      tickData,\n      scale,\n      range,\n    })\n    // do not proceed\n    return\n  }\n\n  // normal label rendering\n  const lg = svg.append('g').attr('class', 'label').attr('transform', centerTx)\n\n  lg.selectAll('text')\n    .data(ticks)\n    .enter()\n    .append('text')\n    .attr('transform', (d, i) => {\n      const ratio = config.customSegmentStops.length === 0\n        ? scale(d)\n        : sumArrayTill(tickData, i)\n\n      const newAngle = config.minAngle + ratio * range\n\n      return `rotate(${newAngle}) translate(0, ${config.labelInset - r})`\n    })\n    .text(config.labelFormat)\n    // add class for text label\n    .attr('class', 'segment-value')\n    // styling stuffs\n    .style('text-anchor', 'middle')\n    .style('font-size', config.labelFontSize)\n    .style('font-weight', 'bold')\n    // .style(\"fill\", \"#666\");\n    .style('fill', config.textColor)\n}\n\n// helper function to render 'custom segment labels'\nfunction _renderCustomSegmentLabels({\n  config,\n  svg,\n  centerTx,\n  r,\n  ticks,\n  tickData,\n  scale,\n  range,\n}) {\n  const { customSegmentStops, customSegmentLabels } = config\n\n  // helper function to calculate angle\n  function _calculateAngle(d, i) {\n    const ratio = customSegmentStops.length === 0 ? scale(d) : sumArrayTill(tickData, i)\n\n    const newAngle = config.minAngle + ratio * range\n\n    return newAngle\n  }\n\n  // calculate the angles ([avg of range angles])\n  const newAngles = customSegmentLabels.map((label, i) => {\n    const curr_index = i\n    const next_index = i + 1\n\n    const d1 = ticks[curr_index]\n    const angle1 = _calculateAngle(d1, curr_index)\n\n    const d2 = ticks[next_index]\n    const angle2 = _calculateAngle(d2, next_index)\n\n    return (angle2 + angle1) / 2\n  })\n\n  const innerRadius = r - config.ringWidth - config.ringInset\n  const outerRadius = r - config.ringInset\n\n  const position = outerRadius - (outerRadius - innerRadius) / 2\n\n  const lg = svg.append('g').attr('class', 'label').attr('transform', centerTx)\n\n  lg.selectAll('text')\n    .data(customSegmentLabels)\n    .enter()\n    .append('text')\n    .attr('transform', (d, i) => {\n      const newAngle = newAngles[i]\n\n      const outerText = `rotate(${newAngle}) translate(0, ${\n        config.labelInset - r\n      })`\n      const innerText = `rotate(${newAngle}) translate(0, ${\n        config.labelInset / 2 - position\n      })`\n\n      // by default we will show \"INSIDE\"\n      return d.position === 'OUTSIDE' ? outerText : innerText\n    })\n    .text((d) => d.text || '')\n    // add class for text label\n    .attr('class', 'segment-value')\n    // styling stuffs\n    .style('text-anchor', 'middle')\n    .style('font-size', (d) => d.fontSize || config.labelFontSize)\n    .style('font-weight', 'bold')\n    .style('fill', (d) => d.color || config.textColor)\n\n  // depending on INSIDE/OUTSIDE config calculate the position/rotate/translate\n\n  // utilise the color/fontSize configs\n}\n\nfunction _renderCurrentValueText({ config, svg }) {\n  const translateX = (config.width + 2 * config.paddingHorizontal) / 2\n  // move the current value text down depending on padding vertical\n  const translateY = (config.width + 4 * config.paddingVertical) / 2\n\n  return (\n    svg\n      .append('g')\n      .attr('transform', `translate(${translateX}, ${translateY})`)\n      .append('text')\n      // add class for the text\n      .attr('class', 'current-value')\n      .attr('text-anchor', 'middle')\n      // position the text 23pt below\n      .attr('y', 23)\n      // add text\n      .text(config.currentValue)\n      .style('font-size', config.valueTextFontSize)\n      .style('font-weight', config.valueTextFontWeight)\n      .style('fill', config.textColor)\n  )\n}\n\nfunction _renderNeedle({\n  config, svg, r, centerTx,\n}) {\n  const needleLength = calculateNeedleHeight({\n    heightRatio: config.needleHeightRatio,\n    radius: r,\n  })\n\n  const lineData = [\n    [config.pointerWidth / 2, 0],\n    [0, -needleLength],\n    [-(config.pointerWidth / 2), 0],\n    [0, config.pointerTailLength],\n    [config.pointerWidth / 2, 0],\n  ]\n\n  const pointerLine = d3Line().curve(d3CurveMonotoneX)\n\n  const pg = svg\n    .append('g')\n    .data([lineData])\n    .attr('class', 'pointer')\n    .attr('transform', centerTx)\n    .style('fill', config.needleColor)\n  return pg\n    .append('path')\n    .attr('d', pointerLine)\n    .attr('transform', `rotate(${config.minAngle})`)\n}\n","import {\n  // importing all the easing functions\n  easeLinear as d3EaseLinear,\n  easeQuadIn as d3EaseQuadIn,\n  easeQuadOut as d3EaseQuadOut,\n  easeQuadInOut as d3EaseQuadInOut,\n  easeCubicIn as d3EaseCubicIn,\n  easeCubicOut as d3EaseCubicOut,\n  easeCubicInOut as d3EaseCubicInOut,\n  easePolyIn as d3EasePolyIn,\n  easePolyOut as d3EasePolyOut,\n  easePolyInOut as d3EasePolyInOut,\n  easeSinIn as d3EaseSinIn,\n  easeSinOut as d3EaseSinOut,\n  easeSinInOut as d3EaseSinInOut,\n  easeExpIn as d3EaseExpIn,\n  easeExpOut as d3EaseExpOut,\n  easeExpInOut as d3EaseExpInOut,\n  easeCircleIn as d3EaseCircleIn,\n  easeCircleOut as d3EaseCircleOut,\n  easeCircleInOut as d3EaseCircleInOut,\n  easeBounceIn as d3EaseBounceIn,\n  easeBounceOut as d3EaseBounceOut,\n  easeBounceInOut as d3EaseBounceInOut,\n  easeBackIn as d3EaseBackIn,\n  easeBackOut as d3EaseBackOut,\n  easeBackInOut as d3EaseBackInOut,\n  easeElasticIn as d3EaseElasticIn,\n  easeElasticOut as d3EaseElasticOut,\n  easeElasticInOut as d3EaseElasticInOut,\n  easeElastic as d3EaseElastic,\n} from 'd3'\nimport { Transition } from '../enums'\n\n// takes a 'transition string' and returns a d3 transition method\n// default is easeLinear\nexport function getNeedleTransition(transition) {\n  switch (transition) {\n    // easeLinear\n    case Transition.easeLinear:\n      return d3EaseLinear\n    // easeQuadIn as d3EaseQuadIn,\n    case Transition.easeQuadIn:\n      return d3EaseQuadIn\n    // easeQuadOut as d3EaseQuadOut\n    case Transition.easeQuadOut:\n      return d3EaseQuadOut\n    // easeQuadInOut as d3EaseQuadInOut\n    case Transition.easeQuadInOut:\n      return d3EaseQuadInOut\n    // easeCubicIn as d3EaseCubicIn\n    case Transition.easeCubicIn:\n      return d3EaseCubicIn\n    // easeCubicOut as d3EaseCubicOut,\n    case Transition.easeCubicOut:\n      return d3EaseCubicOut\n    // easeCubicInOut as d3EaseCubicInOut,\n    case Transition.easeCubicInOut:\n      return d3EaseCubicInOut\n    // easePolyIn as d3EasePolyIn,\n    case Transition.easePolyIn:\n      return d3EasePolyIn\n    // easePolyOut as d3EasePolyOut,\n    case Transition.easePolyOut:\n      return d3EasePolyOut\n    // easePolyInOut as d3EasePolyInOut,\n    case Transition.easePolyInOut:\n      return d3EasePolyInOut\n    // easeSinIn as d3EaseSinIn,\n    case Transition.easeSinIn:\n      return d3EaseSinIn\n    // easeSinOut as d3EaseSinOut,\n    case Transition.easeSinOut:\n      return d3EaseSinOut\n    // easeSinInOut as d3EaseSinInOut,\n    case Transition.easeSinInOut:\n      return d3EaseSinInOut\n    // easeExpIn as d3EaseExpIn,\n    case Transition.easeExpIn:\n      return d3EaseExpIn\n    // easeExpOut as d3EaseExpOut,\n    case Transition.easeExpOut:\n      return d3EaseExpOut\n    // easeExpInOut as d3EaseExpInOut,\n    case Transition.easeExpInOut:\n      return d3EaseExpInOut\n    // easeCircleIn as d3EaseCircleIn,\n    case Transition.easeCircleIn:\n      return d3EaseCircleIn\n    // easeCircleOut as d3EaseCircleOut,\n    case Transition.easeCircleOut:\n      return d3EaseCircleOut\n    // easeCircleInOut as d3EaseCircleInOut,\n    case Transition.easeCircleInOut:\n      return d3EaseCircleInOut\n    // easeBounceIn as d3EaseBounceIn,\n    case Transition.easeBounceIn:\n      return d3EaseBounceIn\n    // easeBounceOut as d3EaseBounceOut,\n    case Transition.easeBounceOut:\n      return d3EaseBounceOut\n    // easeBounceInOut as d3EaseBounceInOut,\n    case Transition.easeBounceInOut:\n      return d3EaseBounceInOut\n    // easeBackIn as d3EaseBackIn,\n    case Transition.easeBackIn:\n      return d3EaseBackIn\n    // easeBackOut as d3EaseBackOut,\n    case Transition.easeBackOut:\n      return d3EaseBackOut\n    // easeBackInOut as d3EaseBackInOut,\n    case Transition.easeBackInOut:\n      return d3EaseBackInOut\n    // easeElasticIn as d3EaseElasticIn,\n    case Transition.easeElasticIn:\n      return d3EaseElasticIn\n    // easeElasticOut as d3EaseElasticOut,\n    case Transition.easeElasticOut:\n      return d3EaseElasticOut\n    // easeElasticInOut as d3EaseElasticInOut,\n    case Transition.easeElasticInOut:\n      return d3EaseElasticInOut\n    // easeElastic as d3EaseElastic,\n    case Transition.easeElastic:\n      return d3EaseElastic\n\n    // if not a valid transition; throw a warning and return the default transition\n    default:\n      console.warn(\n        `Warning: Invalid needle transition '${transition}'. Switching to default transition 'easeQuadInOut'`\n      )\n      return d3EaseQuadInOut\n  }\n}\n","import React, { PureComponent } from 'react'\nimport { format as d3Format, select as d3Select } from 'd3'\n\nimport { getConfig, DEFAULT_PROPS, updateConfig } from './core/config'\nimport { render, update } from './core/render'\nimport { CustomSegmentLabelPosition, Transition } from './core/enums'\n\nclass ReactSpeedometer extends PureComponent {\n  static displayName = 'ReactSpeedometer'\n\n  constructor(props) {\n    super(props)\n\n    // list of d3 refs to share within the components\n    this.d3_refs = {\n      pointer: false,\n      current_value_text: false,\n    }\n  }\n\n  componentDidMount() {\n    // render the gauge here\n    this.renderGauge()\n  }\n\n  render = () => {\n    return <div ref={ref => (this.gaugeDiv = ref)} />\n  }\n\n  componentDidUpdate() {\n    // on update, check if 'forceRender' option is present;\n    if (this.props.forceRender) {\n      this.renderGauge()\n    } else {\n      // let us just animate the value of the speedometer\n      this.updateReadings()\n    }\n  }\n\n  renderGauge() {\n    this.config = getConfig({\n      PROPS: this.props,\n      parentWidth: this.gaugeDiv.parentNode.clientWidth,\n      parentHeight: this.gaugeDiv.parentNode.clientHeight,\n    })\n\n    // remove existing gauge (if any)\n    d3Select(this.gaugeDiv).select('svg').remove()\n\n    this.d3_refs = render({\n      container: this.gaugeDiv,\n      config: this.config,\n    })\n\n    update({\n      d3_refs: this.d3_refs,\n      newValue: this.props.value,\n      config: this.config,\n    })\n  }\n\n  updateReadings() {\n    this.config = updateConfig(this.config, {\n      labelFormat: d3Format(this.props.valueFormat || ''),\n      currentValueText: this.props.currentValueText || '${value}',\n    })\n\n    // updates the readings of the gauge with the current prop value\n    // animates between old prop value and current prop value\n    update({\n      d3_refs: this.d3_refs,\n      newValue: this.props.value || 0,\n      config: this.config,\n    })\n  }\n}\n\n// define the proptypes\n// make all the props and 'required' and provide sensible default in the 'defaultProps'\n\n\n// define the default proptypes\nReactSpeedometer.defaultProps = DEFAULT_PROPS\n\nexport default ReactSpeedometer\n\n// enums\nexport { CustomSegmentLabelPosition, Transition }\n","import React from 'react'\nimport * as R from 'colay/ramda'\nimport {\n  useLayout,\n} from 'colay-ui'\nimport { View, Box, Text } from 'native-base'\nimport { StyleSheet } from 'react-native'\nimport { BRAND_COLORS_MAP } from '@constants'\nimport GaugeChart from './GaugeChart/lib2'\n\nconst MARGIN = 100\n\nexport default (props) => {\n  const {\n    data: {\n      values,\n      segments,\n      secondSegments,\n    },\n  } = props\n  const maxValue = React.useMemo(\n    () => R.reduce(\n      (acc, item) => (item.value > acc ? item.value : acc), 0, segments,\n    ),\n    [segments],\n  )\n  const arcsLength = React.useMemo(() => {\n    const total = R.reduce((acc, item) => item.value + acc, 0, segments)\n    return segments.map((item) => item.value / total)\n  }, [segments])\n  const segmentColors = React.useMemo(() => segments.map((item) => item.color), [segments])\n  const secondArcsLength = React.useMemo(() => {\n    const total = R.reduce((acc, item) => item.value + acc, 0, secondSegments)\n    return secondSegments.map((item) => item.value / total)\n  }, [secondSegments])\n  const secondSegmentColors = React.useMemo(\n    () => secondSegments.map((item) => item.color),\n    [secondSegments],\n  )\n  const {\n    onLayout,\n    height,\n    width,\n    initialized,\n  } = useLayout()\n  return (\n    <View\n      style={{\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'white',\n      }}\n      onLayout={onLayout}\n    >\n      <View\n        style={[{\n          position: 'absolute',\n          top: 0,\n          left: 30,\n          zIndex: -1,\n        }]}\n      >\n        {\n          values.map(({ label, color }) => (\n            <Box\n              flexDirection=\"row\"\n              alignItems=\"center\"\n            >\n              <Box\n                width={5}\n                height={5}\n                borderRadius={5}\n                backgroundColor={color}\n                mr={2}\n                mb={2}\n              />\n              <Text>{label}</Text>\n            </Box>\n          ))\n        }\n      </View>\n      {\n        initialized && (\n          <>\n            <GaugeChart\n              width={width - 50}\n              height={height}\n              paddingVertical={70}\n              paddingHorizontal={70}\n              needleLabelFontSize={10}\n              needles={values}\n              customSegmentLabels={segments}\n              segments={segments.length}\n              segmentColors={segmentColors}\n              arcsLength={arcsLength}\n              minValue={0}\n              maxValue={maxValue}\n              labelsEnabled={false}\n            />\n            <View\n              style={[StyleSheet.absoluteFillObject, {\n                top: MARGIN / 2,\n                left: MARGIN / 2,\n                zIndex: -1,\n              }]}\n            >\n              {\n                secondSegments && (\n                  <GaugeChart\n                    width={width - 50 - MARGIN}\n                    height={height}\n                    paddingVertical={70}\n                    paddingHorizontal={70}\n                    needleLabelFontSize={10}\n                    needles={values}\n                    customSegmentLabels={secondSegments}\n                    segments={secondSegments.length}\n                    segmentColors={secondSegmentColors}\n                    arcsLength={secondArcsLength}\n                    minValue={0}\n                    maxValue={maxValue}\n                    labelsEnabled={false}\n                  />\n                )\n              }\n            </View>\n          </>\n        )\n      }\n    </View>\n  )\n}\n\nconst values = [\n  {\n    needleColor: '#5BE12C',\n    value: 400,\n    label: 'A',\n  },\n  {\n    needleColor: '#5BE12C',\n    value: 100,\n    label: 'BB',\n  },\n]\nconst segments = [\n  {\n    // text: 'Very Bad',\n    position: 'INSIDE',\n    color: '#555',\n    value: 100,\n  },\n  {\n    // text: 'Bad',\n    position: 'INSIDE',\n    color: '#555',\n    value: 200,\n  },\n  {\n    // text: 'Ok',\n    position: 'INSIDE',\n    color: '#555',\n    fontSize: '19px',\n    value: 300,\n  },\n]\n","import { MaterialCommunityIcons } from '@expo/vector-icons'\nimport { Icon, IIconProps } from 'native-base'\nimport React from 'react'\n\nexport const IconSet = React.forwardRef((props: IIconProps, forwardedRef) => {\n  const { ...rest } = props\n  return (\n    <Icon\n      ref={forwardedRef}\n      as={MaterialCommunityIcons}\n      {...rest}\n    />\n  )\n})\n","import React from 'react'\nimport { JsonEditor as Editor } from 'jsoneditor-react'\nimport ace from 'brace'\nimport 'brace/mode/json'\nimport 'brace/theme/github'\nimport 'brace/theme/tomorrow_night_blue'\n\nexport type JSONEditorProps = {\n  value: any\n  onChange: (value: any) => void\n}\n\nexport const JSONEditor = (props: JSONEditorProps) => {\n  const {\n    onChange,\n    value,\n  } = props\n  return (\n    <>\n      <Editor\n        htmlElementProps={{\n          style: {\n            width: '100%',\n            height: '100%',\n          },\n        }}\n        ace={ace}\n        value={value}\n        onChange={onChange}\n        theme=\"ace/theme/tomorrow_night_blue\"\n      />\n    </>\n  )\n}\n","import React from 'react'\nimport * as lottie from 'lottie-web'\nimport { View } from 'react-native'\nimport { useForwardRef, wrapComponent } from 'colay-ui'\nimport * as R from 'colay/ramda'\n\nexport type LottieType = lottie.AnimationItem & {\n  totalFrames: number;\n}\n\nconst RESIZE_MODE = {\n  center: 'xMidYMid meet',\n  contain: 'xMinYMin meet',\n  cover: 'none',\n} as const\n\nfunction LottieElement(\n  props: LottieProps,\n  forwardRef: React.ForwardedRef<LottieType>,\n) {\n  const {\n    style,\n    loop,\n    source = { uri: 'https://assets2.lottiefiles.com/datafiles/Hc0DflKIkYg1j3u/data.json' },\n    autoPlay = true,\n    resizeMode = 'contain',\n  } = props\n  const animationRef = useForwardRef<lottie.AnimationItem>(forwardRef)\n  const id = React.useMemo(() => R.uuid(), [])\n  React.useEffect(\n    () => {\n      if (animationRef.current) {\n        animationRef.current.destroy()\n      }\n      const animationContainerNode = document.getElementById(id)\n      const animation = lottie.loadAnimation({\n        container: animationContainerNode,\n        renderer: 'svg',\n        loop,\n        autoplay: autoPlay,\n        ...(\n          // @ts-ignore\n          source.uri\n          // @ts-ignore\n            ? { path: source.uri }\n            : { animationData: source }\n        ),\n        rendererSettings: {\n          preserveAspectRatio: RESIZE_MODE[resizeMode],\n        },\n      })\n      animationRef.current = animation\n      // @ts-ignore\n      forwardRef?.(animation)\n      return () => animationRef.current?.destroy()\n    },\n    [autoPlay, loop, source],\n  )\n  return (\n    <View\n    // @ts-ignore\n      nativeID={id}\n      style={style}\n    />\n  )\n}\n\nexport const Lottie = wrapComponent<LottieProps>(\n  LottieElement,\n  {\n    isForwardRef: true,\n  },\n)\n","import React from 'react'\nimport {\n  Box,\n} from 'native-base'\n\nexport type PaperProps = React.ComponentPropsWithRef<typeof Box>\n\nexport const Paper = (props: PaperProps) => {\n  const {\n    children,\n    _light = {},\n    _dark = {},\n    ...rest\n  } = props\n  return (\n    <Box\n      {...rest}\n      _light={{\n        backgroundColor: 'light.50',\n        ..._light,\n      }}\n      _dark={{\n        backgroundColor: 'dark.50', // 'gray.700',\n        ..._dark,\n      }}\n    >\n      {children}\n    </Box>\n  )\n}\n","import React from 'react'\nimport {\n  ScrollView as NativeScrollView,\n  StyleProp,\n  ViewStyle,\n} from 'react-native'\nimport { Paper, PaperProps } from '@components/Paper'\nimport { KeyboardAvoidingView, Spinner } from 'native-base'\n\nfunction ScrollView({\n  children,\n  style,\n}: {\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n}) {\n  return (\n    <NativeScrollView\n      contentContainerStyle={[\n        {\n          flexGrow: 1,\n        },\n        style,\n      ]}\n    >\n      {children}\n    </NativeScrollView>\n  )\n}\n\ntype Props = {\n  scrollable?: boolean;\n  isLoading?: boolean;\n  hasKeyboardAvoidingView?: boolean;\n} & PaperProps\n\nexport function ScreenContainer({\n  scrollable = false,\n  hasKeyboardAvoidingView = false,\n  children,\n  isLoading,\n  ...rest\n}: Props) {\n  const Container = hasKeyboardAvoidingView\n    ? KeyboardAvoidingView\n    : React.Fragment\n  if (isLoading) {\n    return (\n      <Paper\n        style={{\n          width: '100%',\n          height: '100%',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Spinner />\n      </Paper>\n    )\n  }\n  return (\n    <Paper\n      flex={1}\n      safeArea\n      {...rest}\n    >\n      {scrollable ? (\n        <Container\n          style={{\n            width: '100%',\n            height: '100%',\n          }}\n        >\n          <ScrollView style={{\n            width: '100%',\n            height: '100%',\n          }}\n          >\n            {children}\n          </ScrollView>\n        </Container>\n      ) : (\n        <Container\n          style={{\n            width: '100%',\n            height: '100%',\n          }}\n        >\n          {children}\n        </Container>\n      )}\n    </Paper>\n  )\n}\n","export const readTextFile = async (blob: Blob, encoding?: string) => new Promise<string>(\n  (res, rej) => {\n    const reader = new FileReader()\n    reader.addEventListener('load', () => {\n      const { result } = reader\n      // @ts-ignore\n      res(result)\n    })\n    reader.addEventListener('error', (error) => {\n      rej(error)\n    })\n    reader.readAsText(blob, encoding)\n  },\n)\n","import React from 'react'\nimport {\n  Box,\n  Text,\n} from 'native-base'\n\nexport const TextBox = (props) => {\n  const {\n    data,\n    flexDirection = 'column',\n  } = props\n  return (\n    <Box\n      flexDirection={flexDirection}\n    >\n      {\n          data.map(({ text, color = 'black', backgroundColor }) => (\n            <Box\n              backgroundColor={backgroundColor}\n              justifyContent=\"center\"\n              mb={1}\n              mr={1}\n              py={1}\n              px={1}\n              width={'61px'}\n            >\n              <Text\n                fontSize={5}\n                color={color}\n                textAlign=\"center\"\n              >\n                {text}\n              </Text>\n            </Box>\n          ))\n        }\n    </Box>\n  )\n}\n","import * as ChartExamples from '@components/ChartExamples'\nimport { TextBox } from '@components/TextBox'\nimport { BRAND_COLORS_MAP } from '@constants'\nimport {\n  colorModeManager, NATIVE_BASE_CONFIG,\n} from '@root/config/native-base'\nimport deepmerge from 'deepmerge'\nimport {\n  Box, NativeBaseProvider,\n} from 'native-base'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as R from 'colay/ramda'\nimport { View } from 'react-native'\nimport './Override.css'\n\nconst combineMerge = (target, source, options) => {\n  const destination = target.slice()\n\n  source.forEach((item, index) => {\n    if (typeof destination[index] === 'undefined') {\n      destination[index] = options.cloneUnlessOtherwiseSpecified(item, options)\n    } else if (options.isMergeableObject(item)) {\n      destination[index] = merge(target[index], item, options)\n    } else if (target.indexOf(item) === -1) {\n      destination.push(item)\n    }\n  })\n  return destination\n}\n\nconst merge = (val: any, val2: any) => deepmerge(\n  val,\n  val2,\n  { arrayMerge: combineMerge },\n)\n\nexport const OverrideHTML = (props) => {\n  const {\n    data,\n  } = props\n  const containerID = React.useMemo(() => R.uuid(), [])\n  React.useEffect(() => {\n    const call = async () => {\n      const result = await (await fetch('/report.html')).text()\n      const containerNode = document.getElementById(containerID)!\n      containerNode.innerHTML = result\n      data.forEach((chartList, pageIndex) => {\n        const pageNode = document.getElementsByClassName(`pc pc${pageIndex + 1} w0 h0`)[0]!\n        const image = pageNode.getElementsByTagName('img')[0]!\n        chartList.forEach((chart, chartIndex) => {\n          const bindChart = Bind[pageIndex]?.[chartIndex] ?? {}\n\n          const {\n            id,\n            data: chartData,\n            type: chartType,\n            extraElements = [],\n            ...rest\n          } = merge(\n            chart,\n            bindChart,\n          )\n          console.log(bindChart, chart, merge(\n            chart,\n            bindChart,\n          ))\n          const chartContainer = document.createElement('div')\n          chartContainer.id = `${id}Container`\n          const chartWrapper = document.createElement('div')\n          chartWrapper.id = id\n          chartContainer.appendChild(chartWrapper)\n          extraElements.map((extraElement, index) => {\n            const chartExtraContainer = document.createElement('div')\n            chartExtraContainer.id = `${id}ExtraContainer${index}`\n            pageNode.insertBefore(chartExtraContainer, image.nextElementSibling)\n            ReactDOM.render(\n              <NativeBaseProvider\n                config={NATIVE_BASE_CONFIG}\n                colorModeManager={colorModeManager}\n              >\n                {extraElement.component()}\n              </NativeBaseProvider>,\n              chartExtraContainer,\n            )\n          })\n          pageNode.insertBefore(chartContainer, image.nextElementSibling)\n          if (chartData && chartContainer) {\n            const Chart = ChartExamples[chartType]\n            ReactDOM.render(\n              <>\n                <View\n                  style={{\n                    width: '100%',\n                    height: '100%',\n                  }}\n                >\n                  <NativeBaseProvider\n                    config={NATIVE_BASE_CONFIG}\n                    colorModeManager={colorModeManager}\n                  >\n                    <Box\n                      p={2}\n                      w=\"100%\"\n                      h=\"100%\"\n                      alignItems=\"center\"\n                      justifyContent=\"center\"\n                    >\n                      <Chart\n                        data={chartData}\n                        {...rest}\n                      />\n                    </Box>\n                  </NativeBaseProvider>\n                </View>\n              </>,\n              chartWrapper,\n            )\n          }\n        })\n      })\n      // return\n    }\n    call()\n  }, [data])\n  return (\n    <div\n      style={{\n        overflow: 'visible',\n      }}\n      id={containerID}\n    />\n  )\n}\nconst KEYS = {\n  fonds: 'FONDS',\n  pension: 'VERGELIJKBARE PENSIOENFONDSEN',\n  alle: 'ALLE DEELNEMENDE PENSIOENFONDSEN',\n}\n\nconst RADAR_CHART_KEYS = {\n  costs: 'Costs',\n  '1yaring': '1-jaring',\n  '5jaring': '5-jaring',\n  '10jaring': '10-jaring',\n  impleme: 'Impleme',\n  alpha: 'Alpha',\n  asset: 'Asset',\n}\n\nconst SPEEDOMETER_SEGMENTS_BIND = [\n  {\n    color: BRAND_COLORS_MAP.blue,\n  },\n  {\n    color: BRAND_COLORS_MAP.blue,\n  },\n  {\n    color: BRAND_COLORS_MAP.blue,\n  },\n]\nconst SPEEDOMETER_SECOND_SEGMENTS = [\n  {\n    color: BRAND_COLORS_MAP.blue,\n  },\n  {\n    color: BRAND_COLORS_MAP.cream,\n  },\n  {\n    color: BRAND_COLORS_MAP.cream,\n  },\n]\n\nconst SPEEDOMETER_VALUES_BIND = [\n  {\n    color: BRAND_COLORS_MAP.grean,\n  },\n  {\n    color: BRAND_COLORS_MAP.lightBlue,\n  },\n  {\n    color: BRAND_COLORS_MAP.orange,\n  },\n]\n\nconst SEGMENTS = [\n  {\n    value: 50,\n  },\n  {\n    value: 150,\n  },\n  {\n    value: 200,\n  },\n]\n\nconst BARCHART_VALUES_BIND = [\n  {\n    // country: 'AD',\n    0: 48,\n    '0Color': BRAND_COLORS_MAP.blue,\n    1: 67,\n    '1Color': BRAND_COLORS_MAP.lightBlue,\n    2: 85,\n    '2Color': BRAND_COLORS_MAP.blue,\n  },\n]\n\nconst Bind = [\n  [\n    {\n      id: 'PieChart0',\n      type: 'PieChart',\n      data: [\n        {\n          color: BRAND_COLORS_MAP.orange,\n        },\n        {\n          color: BRAND_COLORS_MAP.lightBlue,\n        },\n        {\n          color: BRAND_COLORS_MAP.blue,\n        },\n      ],\n    },\n    {\n      id: 'PieChart1',\n      type: 'PieChart',\n      data: [\n        {\n          color: BRAND_COLORS_MAP.orange,\n        },\n        {\n          color: BRAND_COLORS_MAP.lightBlue,\n        },\n        {\n          color: BRAND_COLORS_MAP.blue,\n        },\n      ],\n    },\n    {\n      id: 'PieChart2',\n      type: 'PieChart',\n      data: [\n        {\n          color: BRAND_COLORS_MAP.orange,\n        },\n        {\n          color: BRAND_COLORS_MAP.lightBlue,\n        },\n        {\n          color: BRAND_COLORS_MAP.blue,\n        },\n      ],\n    },\n    {\n      id: 'Speedometer0',\n      type: 'Speedometer',\n      data: {\n        values: SPEEDOMETER_VALUES_BIND,\n        segments: SPEEDOMETER_SEGMENTS_BIND,\n        secondSegments: SPEEDOMETER_SECOND_SEGMENTS,\n      },\n      extraElements: [\n        {\n          component: () => (\n            <TextBox\n              data={[\n                {\n                  text: 'RANGEALLE DEELNEMENDE\\nPENSIOENFONDSEN',\n                  color: 'white',\n                  backgroundColor: BRAND_COLORS_MAP.blue,\n                },\n                {\n                  text: 'RANGE VERGELIJKBARE\\nPENSIOENFONDSEN',\n                  backgroundColor: BRAND_COLORS_MAP.cream,\n                },\n              ]}\n            />\n          ),\n        },\n      ],\n    },\n  ],\n  [\n    {\n      id: 'Speedometer1',\n      type: 'Speedometer',\n      data: {\n        values: SPEEDOMETER_VALUES_BIND,\n        segments: SPEEDOMETER_SEGMENTS_BIND,\n        secondSegments: SPEEDOMETER_SECOND_SEGMENTS,\n      },\n      extraElements: [\n        {\n          component: () => (\n            <TextBox\n              data={[\n                {\n                  text: 'RANGEALLE DEELNEMENDE\\nPENSIOENFONDSEN',\n                  color: 'white',\n                  backgroundColor: BRAND_COLORS_MAP.blue,\n                },\n                {\n                  text: 'RANGE VERGELIJKBARE\\nPENSIOENFONDSEN',\n                  backgroundColor: BRAND_COLORS_MAP.cream,\n                },\n              ]}\n            />\n          ),\n        },\n      ],\n    },\n    {\n      id: 'Speedometer2',\n      type: 'Speedometer',\n      data: {\n        values: SPEEDOMETER_VALUES_BIND,\n        segments: SPEEDOMETER_SEGMENTS_BIND,\n        secondSegments: SPEEDOMETER_SECOND_SEGMENTS,\n      },\n    },\n    {\n      id: 'Speedometer3',\n      type: 'Speedometer',\n      data: {\n        values: SPEEDOMETER_VALUES_BIND,\n        segments: SPEEDOMETER_SEGMENTS_BIND,\n        secondSegments: SPEEDOMETER_SECOND_SEGMENTS,\n      },\n      extraElements: [\n        {\n          component: () => (\n            <TextBox\n              data={[\n                {\n                  text: 'RANGEALLE DEELNEMENDE\\nPENSIOENFONDSEN',\n                  color: 'white',\n                  backgroundColor: BRAND_COLORS_MAP.blue,\n                },\n                {\n                  text: 'RANGE VERGELIJKBARE\\nPENSIOENFONDSEN',\n                  backgroundColor: BRAND_COLORS_MAP.cream,\n                },\n              ]}\n            />\n          ),\n        },\n      ],\n    },\n    {\n      id: 'Speedometer4',\n      type: 'Speedometer',\n      data: {\n        values: [\n          {\n            color: BRAND_COLORS_MAP.grean,\n          },\n          {\n            color: BRAND_COLORS_MAP.lightBlue,\n          },\n        ],\n        segments: SPEEDOMETER_SEGMENTS_BIND,\n        secondSegments: SPEEDOMETER_SECOND_SEGMENTS,\n      },\n      extraElements: [\n        {\n          component: () => (\n            <TextBox\n              data={[\n                {\n                  text: 'RANGEALLE DEELNEMENDE\\nPENSIOENFONDSEN',\n                  color: 'white',\n                  backgroundColor: BRAND_COLORS_MAP.blue,\n                },\n                {\n                  text: 'RANGE VERGELIJKBARE\\nPENSIOENFONDSEN',\n                  backgroundColor: BRAND_COLORS_MAP.cream,\n                },\n              ]}\n            />\n          ),\n        },\n      ],\n    },\n    {\n      id: 'Speedometer5',\n      type: 'Speedometer',\n      data: {\n        values: SPEEDOMETER_VALUES_BIND,\n        segments: SPEEDOMETER_SEGMENTS_BIND,\n        secondSegments: SPEEDOMETER_SECOND_SEGMENTS,\n      },\n      extraElements: [\n        {\n          component: () => (\n            <TextBox\n              data={[\n                {\n                  text: 'RANGEALLE DEELNEMENDE\\nPENSIOENFONDSEN',\n                  color: 'white',\n                  backgroundColor: BRAND_COLORS_MAP.blue,\n                },\n                {\n                  text: 'RANGE VERGELIJKBARE\\nPENSIOENFONDSEN',\n                  backgroundColor: BRAND_COLORS_MAP.cream,\n                },\n              ]}\n            />\n          ),\n        },\n      ],\n    },\n    {\n      id: 'BarChart0',\n      type: 'BarChart',\n      data: BARCHART_VALUES_BIND,\n      keys: ['0', '1', '2'],\n      extraElements: [\n        {\n          component: () => (\n            <TextBox\n              flexDirection=\"row\"\n              data={[\n                {\n                  text: 'ALLE DEELNEMENDE\\nPENSIOENFONDSEN',\n                  color: 'white',\n                  backgroundColor: BRAND_COLORS_MAP.blue,\n                },\n                {\n                  text: 'VERGELIJKBARE\\nPENSIOENFONDSEN',\n                  backgroundColor: BRAND_COLORS_MAP.lightBlue,\n                },\n              ]}\n            />\n          ),\n        },\n      ],\n    },\n  ],\n  [\n    {\n      id: 'BarChart1',\n      type: 'BarChart',\n      data: BARCHART_VALUES_BIND,\n      keys: ['0', '1', '2'],\n      extraElements: [\n        {\n          component: () => (\n            <TextBox\n              flexDirection=\"row\"\n              data={[\n                {\n                  text: 'ALLE DEELNEMENDE\\nPENSIOENFONDSEN',\n                  color: 'white',\n                  backgroundColor: BRAND_COLORS_MAP.blue,\n                },\n                {\n                  text: 'VERGELIJKBARE\\nPENSIOENFONDSEN',\n                  backgroundColor: BRAND_COLORS_MAP.lightBlue,\n                },\n              ]}\n            />\n          ),\n        },\n      ],\n    },\n    {\n      id: 'BarChart2',\n      type: 'BarChart',\n      data: BARCHART_VALUES_BIND,\n      keys: ['0', '1', '2'],\n      extraElements: [\n        {\n          component: () => (\n            <TextBox\n              flexDirection=\"row\"\n              data={[\n                {\n                  text: 'ALLE DEELNEMENDE\\nPENSIOENFONDSEN',\n                  color: 'white',\n                  backgroundColor: BRAND_COLORS_MAP.blue,\n                },\n                {\n                  text: 'VERGELIJKBARE\\nPENSIOENFONDSEN',\n                  backgroundColor: BRAND_COLORS_MAP.lightBlue,\n                },\n              ]}\n            />\n          ),\n        },\n      ],\n    },\n    {\n      id: 'RadarChart0',\n      type: 'RadarChart',\n      keys: [KEYS.alle, KEYS.pension, KEYS.fonds],\n      colors: [BRAND_COLORS_MAP.blue, BRAND_COLORS_MAP.lightBlue, BRAND_COLORS_MAP.orange],\n      extraElements: [\n        {\n          component: () => (\n            <TextBox\n              flexDirection=\"row\"\n              data={[\n                {\n                  text: 'ALLE DEELNEMENDE\\nPENSIOENFONDSEN',\n                  color: 'white',\n                  backgroundColor: BRAND_COLORS_MAP.blue,\n                },\n                {\n                  text: 'VERGELIJKBARE\\nPENSIOENFONDSEN',\n                  backgroundColor: BRAND_COLORS_MAP.lightBlue,\n                },\n                {\n                  text: 'FONDS',\n                  backgroundColor: BRAND_COLORS_MAP.orange,\n                },\n              ]}\n            />\n          ),\n        },\n      ],\n    },\n    {\n      id: 'Speedometer6',\n      type: 'Speedometer',\n      data: {\n        values: SPEEDOMETER_VALUES_BIND,\n        segments: SPEEDOMETER_SEGMENTS_BIND,\n        secondSegments: SPEEDOMETER_SECOND_SEGMENTS,\n      },\n      extraElements: [\n        {\n          component: () => (\n            <TextBox\n              data={[\n                {\n                  text: 'RANGEALLE DEELNEMENDE\\nPENSIOENFONDSEN',\n                  color: 'white',\n                  backgroundColor: BRAND_COLORS_MAP.blue,\n                },\n                {\n                  text: 'RANGE VERGELIJKBARE\\nPENSIOENFONDSEN',\n                  backgroundColor: BRAND_COLORS_MAP.cream,\n                },\n              ]}\n            />\n          ),\n        },\n      ],\n    },\n    {\n      id: 'Speedometer7',\n      type: 'Speedometer',\n      data: {\n        values: SPEEDOMETER_VALUES_BIND,\n        segments: SPEEDOMETER_SEGMENTS_BIND,\n        secondSegments: SPEEDOMETER_SECOND_SEGMENTS,\n      },\n    },\n    {\n      id: 'BarChart3',\n      type: 'BarChart',\n      data: BARCHART_VALUES_BIND,\n      keys: ['0', '1', '2'],\n      extraElements: [\n        {\n          component: () => (\n            <TextBox\n              flexDirection=\"row\"\n              data={[\n                {\n                  text: 'ALLE DEELNEMENDE\\nPENSIOENFONDSEN',\n                  color: 'white',\n                  backgroundColor: BRAND_COLORS_MAP.blue,\n                },\n                {\n                  text: 'VERGELIJKBARE\\nPENSIOENFONDSEN',\n                  backgroundColor: BRAND_COLORS_MAP.lightBlue,\n                },\n              ]}\n            />\n          ),\n        },\n      ],\n    },\n  ],\n  [\n    {\n      id: 'BarChart4',\n      type: 'BarChart',\n      data: BARCHART_VALUES_BIND,\n      keys: ['0', '1', '2'],\n      extraElements: [\n        {\n          component: () => (\n            <TextBox\n              flexDirection=\"row\"\n              data={[\n                {\n                  text: 'ALLE DEELNEMENDE\\nPENSIOENFONDSEN',\n                  color: 'white',\n                  backgroundColor: BRAND_COLORS_MAP.blue,\n                },\n                {\n                  text: 'VERGELIJKBARE\\nPENSIOENFONDSEN',\n                  backgroundColor: BRAND_COLORS_MAP.lightBlue,\n                },\n              ]}\n            />\n          ),\n        },\n      ],\n    },\n    {\n      id: 'BarChart5',\n      type: 'BarChart',\n      data: BARCHART_VALUES_BIND,\n      keys: ['0', '1', '2'],\n      extraElements: [\n        {\n          component: () => (\n            <TextBox\n              flexDirection=\"row\"\n              data={[\n                {\n                  text: 'ALLE DEELNEMENDE\\nPENSIOENFONDSEN',\n                  color: 'white',\n                  backgroundColor: BRAND_COLORS_MAP.blue,\n                },\n                {\n                  text: 'VERGELIJKBARE\\nPENSIOENFONDSEN',\n                  backgroundColor: BRAND_COLORS_MAP.lightBlue,\n                },\n              ]}\n            />\n          ),\n        },\n      ],\n    },\n    {\n      id: 'BarChart6',\n      type: 'BarChart',\n      data: BARCHART_VALUES_BIND,\n      keys: ['0', '1', '2'],\n      extraElements: [\n        {\n          component: () => (\n            <TextBox\n              flexDirection=\"row\"\n              data={[\n                {\n                  text: 'ALLE DEELNEMENDE\\nPENSIOENFONDSEN',\n                  color: 'white',\n                  backgroundColor: BRAND_COLORS_MAP.blue,\n                },\n                {\n                  text: 'VERGELIJKBARE\\nPENSIOENFONDSEN',\n                  backgroundColor: BRAND_COLORS_MAP.lightBlue,\n                },\n              ]}\n            />\n          ),\n        },\n      ],\n    },\n    {\n      id: 'RadarChart1',\n      type: 'RadarChart',\n      keys: [KEYS.alle, KEYS.pension, KEYS.fonds],\n      colors: [BRAND_COLORS_MAP.blue, BRAND_COLORS_MAP.lightBlue, BRAND_COLORS_MAP.orange],\n      extraElements: [\n        {\n          component: () => (\n            <TextBox\n              flexDirection=\"row\"\n              data={[\n                {\n                  text: 'ALLE DEELNEMENDE\\nPENSIOENFONDSEN',\n                  color: 'white',\n                  backgroundColor: BRAND_COLORS_MAP.blue,\n                },\n                {\n                  text: 'VERGELIJKBARE\\nPENSIOENFONDSEN',\n                  backgroundColor: BRAND_COLORS_MAP.lightBlue,\n                },\n                {\n                  text: 'FONDS',\n                  backgroundColor: BRAND_COLORS_MAP.orange,\n                },\n              ]}\n            />\n          ),\n        },\n      ],\n    },\n  ],\n]\n\nconst Pages = [\n  [\n    {\n      id: 'PieChart0',\n      data: [\n        {\n          id: 'Pensioenbeheerkosten',\n          label: 'Pensioenbeheerkosten',\n          value: 11,\n        },\n        {\n          id: 'Transactiekosten',\n          label: 'Transactiekosten',\n          value: 16.2,\n        },\n        {\n          id: 'Vermogensbeheerkosten',\n          label: 'Vermogensbeheerkosten',\n          value: 72.8,\n        },\n      ],\n    },\n    {\n      id: 'PieChart1',\n      data: [\n        {\n          id: 'Pensioenbeheerkosten',\n          label: 'Pensioenbeheerkosten',\n          value: 11,\n        },\n        {\n          id: 'Transactiekosten',\n          label: 'Transactiekosten',\n          value: 16.2,\n        },\n        {\n          id: 'Vermogensbeheerkosten',\n          label: 'Vermogensbeheerkosten',\n          value: 72.8,\n        },\n      ],\n    },\n    {\n      id: 'PieChart2',\n      data: [\n        {\n          id: 'Pensioenbeheerkosten',\n          label: 'Pensioenbeheerkosten',\n          value: 11,\n        },\n        {\n          id: 'Transactiekosten',\n          label: 'Transactiekosten',\n          value: 16.2,\n        },\n        {\n          id: 'Vermogensbeheerkosten',\n          label: 'Vermogensbeheerkosten',\n          value: 72.8,\n        },\n      ],\n    },\n    {\n      id: 'Speedometer0',\n      data: {\n        values: [\n          {\n            value: 200,\n            label: KEYS.alle,\n          },\n          {\n            value: 110,\n            label: KEYS.pension,\n          },\n          {\n            value: 120,\n            label: KEYS.fonds,\n          },\n        ],\n        segments: SEGMENTS,\n      },\n    },\n  ],\n  [\n    {\n      id: 'Speedometer1',\n      type: 'Speedometer',\n      data: {\n        values: [\n          {\n            value: 100,\n            label: KEYS.alle,\n          },\n          {\n            value: 110,\n            label: KEYS.pension,\n          },\n          {\n            value: 120,\n            label: KEYS.fonds,\n          },\n        ],\n        segments: SEGMENTS,\n      },\n    },\n    {\n      id: 'Speedometer2',\n      type: 'Speedometer',\n      data: {\n        values: [\n          {\n            value: 100,\n            label: KEYS.alle,\n          },\n          {\n            value: 110,\n            label: KEYS.pension,\n          },\n          {\n            value: 120,\n            label: KEYS.fonds,\n          },\n        ],\n        segments: SEGMENTS,\n      },\n    },\n    {\n      id: 'Speedometer3',\n      type: 'Speedometer',\n      data: {\n        values: [\n          {\n            value: 100,\n            label: KEYS.alle,\n          },\n          {\n            value: 110,\n            label: KEYS.pension,\n          },\n          {\n            value: 120,\n            label: KEYS.fonds,\n          },\n        ],\n        segments: SEGMENTS,\n      },\n    },\n    {\n      id: 'Speedometer4',\n      type: 'Speedometer',\n      data: {\n        values: [\n          {\n            value: 100,\n            label: KEYS.alle,\n          },\n          {\n            value: 110,\n            label: KEYS.pension,\n          },\n        ],\n        segments: SEGMENTS,\n      },\n    },\n    {\n      id: 'Speedometer5',\n      type: 'Speedometer',\n      data: {\n        values: [\n          {\n            value: 100,\n            label: KEYS.alle,\n          },\n          {\n            value: 110,\n            label: KEYS.pension,\n          },\n          {\n            value: 120,\n            label: KEYS.fonds,\n          },\n        ],\n        segments: SEGMENTS,\n      },\n    },\n    {\n      id: 'BarChart0',\n      type: 'BarChart',\n      value: 90,\n    },\n  ],\n  [\n    {\n      id: 'BarChart1',\n      type: 'BarChart',\n      value: 90,\n    },\n    {\n      id: 'BarChart2',\n      type: 'BarChart',\n      value: 90,\n    },\n    {\n      id: 'RadarChart0',\n      type: 'RadarChart',\n      data: [\n        {\n          type: RADAR_CHART_KEYS.costs,\n          [KEYS.alle]: 70,\n          [KEYS.pension]: 20,\n          [KEYS.fonds]: 130,\n\n        },\n        {\n          type: RADAR_CHART_KEYS['1yaring'],\n          [KEYS.alle]: 10,\n          [KEYS.pension]: 70,\n          [KEYS.fonds]: 20,\n\n        },\n        {\n          type: RADAR_CHART_KEYS['5jaring'],\n          [KEYS.alle]: 50,\n          [KEYS.pension]: 60,\n          [KEYS.fonds]: 70,\n\n        },\n        {\n          type: RADAR_CHART_KEYS['10jaring'],\n          [KEYS.alle]: 30,\n          [KEYS.pension]: 50,\n          [KEYS.fonds]: 160,\n        },\n        {\n          type: RADAR_CHART_KEYS.impleme,\n          [KEYS.alle]: 130,\n          [KEYS.pension]: 10,\n          [KEYS.fonds]: 50,\n        },\n        {\n          type: RADAR_CHART_KEYS.alpha,\n          [KEYS.alle]: 20,\n          [KEYS.pension]: 130,\n          [KEYS.fonds]: 40,\n        },\n        {\n          type: RADAR_CHART_KEYS.asset,\n          [KEYS.alle]: 10,\n          [KEYS.pension]: 20,\n          [KEYS.fonds]: 130,\n        },\n      ],\n    },\n    {\n      id: 'Speedometer6',\n      type: 'Speedometer',\n      data: {\n        values: [\n          {\n            value: 100,\n            label: KEYS.alle,\n          },\n          {\n            value: 110,\n            label: KEYS.pension,\n          },\n          {\n            value: 120,\n            label: KEYS.fonds,\n          },\n        ],\n        segments: SEGMENTS,\n      },\n    },\n    {\n      id: 'Speedometer7',\n      type: 'Speedometer',\n      data: {\n        values: [\n          {\n            value: 100,\n            label: KEYS.alle,\n          },\n          {\n            value: 110,\n            label: KEYS.pension,\n          },\n          {\n            value: 120,\n            label: KEYS.fonds,\n          },\n        ],\n        segments: SEGMENTS,\n      },\n    },\n    {\n      id: 'BarChart3',\n      type: 'BarChart',\n      value: 90,\n    },\n  ],\n  [\n    {\n      id: 'BarChart4',\n      type: 'BarChart',\n      value: 90,\n    },\n    {\n      id: 'BarChart5',\n      type: 'BarChart',\n      value: 90,\n    },\n    {\n      id: 'BarChart6',\n      type: 'BarChart',\n      value: 90,\n    },\n    {\n      id: 'RadarChart1',\n      type: 'RadarChart',\n      data: [\n        {\n          type: 'KOSTEN PENSIOENBEHEER\\nPER DELNEMER(DEF, PF)',\n          [KEYS.alle]: 70,\n          [KEYS.pension]: 20,\n          [KEYS.fonds]: 130,\n\n        },\n        {\n          type: 'KOSTEN PENSIOENBEHEER\\nPER DELNEMER(ALLE)',\n          [KEYS.alle]: 10,\n          [KEYS.pension]: 70,\n          [KEYS.fonds]: 20,\n\n        },\n        {\n          type: 'SERVICE INDEX',\n          [KEYS.alle]: 50,\n          [KEYS.pension]: 60,\n          [KEYS.fonds]: 70,\n\n        },\n        {\n          type: 'COMPLEXITEITS\\nINDEX',\n          [KEYS.alle]: 30,\n          [KEYS.pension]: 50,\n          [KEYS.fonds]: 160,\n        },\n        {\n          type: 'AUTOMATISERINGS\\nINDEX',\n          [KEYS.alle]: 130,\n          [KEYS.pension]: 10,\n          [KEYS.fonds]: 50,\n        },\n        {\n          type: 'OVERDRACHTEN\\nINDEX',\n          [KEYS.alle]: 20,\n          [KEYS.pension]: 130,\n          [KEYS.fonds]: 40,\n        },\n        {\n          type: 'SLAPERS\\nINDEX',\n          [KEYS.alle]: 10,\n          [KEYS.pension]: 20,\n          [KEYS.fonds]: 130,\n        },\n      ],\n    },\n  ],\n]\n","import * as ChartExamples from '@components/ChartExamples'\nimport { IconSet } from '@components/IconSet'\n// import Form from 'colay-form'\nimport { JSONEditor } from '@components/JSONEditor'\nimport { Lottie } from '@components/Lottie'\nimport { Paper } from '@components/Paper'\nimport { ScreenContainer } from '@components/ScreenContainer'\nimport {\n  readTextFile,\n} from '@utils'\nimport {\n  download,\n} from 'colay-ui/utils/download'\nimport * as R from 'colay/ramda'\nimport * as Clipboard from 'expo-clipboard'\nimport * as DocumentPicker from 'expo-document-picker'\n// import { PDFDocument } from 'pdf-lib'\n// import * as R from 'colay/ramda'\nimport html2canvas from 'html2canvas'\nimport {\n  Box,\n  Button, Center, Divider, Heading, HStack, NativeBaseProvider,\n  PresenceTransition, Stack, useBreakpointValue, useColorMode, useToast,\n  ScrollView,\n} from 'native-base'\nimport React from 'react'\nimport {\n  useImmer,\n} from 'colay-ui/hooks/useImmer'\nimport { useWindowDimensions, View } from 'react-native'\nimport 'react-native-gesture-handler'\nimport {\n  colorModeManager, NATIVE_BASE_CONFIG,\n} from '@root/config/native-base'\nimport { DATA as SAMPLE_DATA } from '../../constants'\nimport { OverrideHTML } from './Override'\n\nconst CHART_KEYS = Object.keys(ChartExamples).sort((a, b) => b > a)\n\nexport const HomeScreen = (props: any) => {\n  const { } = props\n  const toast = useToast()\n  const windowDimensions = useWindowDimensions()\n  const initialData = React.useMemo(() => {\n    const urlSearchParams = new URLSearchParams(window.location.search)\n    const params = Object.fromEntries(urlSearchParams.entries())\n    return params?.data && JSON.parse(params?.data)\n  }, [])\n  const [{\n    data,\n    status,\n    formVisible,\n  }, update] = useImmer({\n    data: initialData,\n    status: 'idle',\n    formVisible: false,\n  })\n  const { toggleColorMode } = useColorMode()\n  const numColumns = useBreakpointValue({\n    base: 1,\n    md: 1,\n  })\n  const onCreateCharts = React.useCallback(\n    async () => {\n      try {\n        const result = await DocumentPicker.getDocumentAsync({ type: 'application/json' })\n        if (result.type === 'success') {\n          const fileText = await readTextFile(result.file!)\n          update((draft) => {\n            draft.data = JSON.parse(fileText)\n            draft.status = 'loading'\n          })\n          setTimeout(() => {\n            update((draft) => {\n              draft.status = 'idle'\n            })\n          }, 2500)\n        }\n      } catch (error) {\n        console.error(error)\n        toast.show({\n          title: 'Something went wrong',\n          status: 'error',\n          description: JSON.stringify(error),\n        })\n      }\n    },\n    [],\n  )\n  const onShare = React.useCallback(() => {\n    const link = `${window.location.origin}${window.location.pathname}?${jsonToQuery({ data })}`\n    Clipboard.setString(link)\n    toast.show({\n      title: 'Share',\n      description: 'Sharing link copied to clipboard!',\n      status: 'success',\n    })\n  }, [data])\n  const onDownload = React.useCallback(\n    async () => {\n      const source = document.getElementById('ChartContainer')\n      const width = source?.scrollWidth\n      const height = source?.scrollHeight\n      const canvas = await html2canvas(source, {\n        windowWidth: source?.scrollWidth,\n        windowHeight: source?.scrollHeight,\n        width,\n        height,\n      })\n      canvas.toBlob((blob) => {\n        window.open(URL.createObjectURL(blob), '__blank')\n        download(blob, {\n          name: 'charts.jpeg',\n          // mimeType: '\"application/pdf\"',\n        })\n      })\n    },\n    [data],\n  )\n  const onPressUpdateData = () => R.callLater(\n    () => update((draft) => {\n      draft.formVisible = !draft.formVisible\n    }),\n    0,\n  )\n  const onUpdateData = React.useMemo(() => R.debounce(\n    ({ formData }) => {\n      console.log('A', formData)\n      setTimeout(() => update((draft) => {\n        draft.data = formData\n      }), 0)\n    },\n    300,\n  ), [])\n\n  // React.useEffect(() => {\n  //   if (data) {\n  //     CHART_KEYS.map((chartName) => {\n  //       const chartData = data[chartName]\n  //       if (chartData && document.getElementById(chartName)) {\n  //         const Chart = ChartExamples[chartName]\n  //         ReactDOM.render(\n  //           <View\n  //             style={{\n  //               width: '100%',\n  //               height: '100%',\n  //             }}\n  //           >\n  //             <NativeBaseProvider\n  //               config={NATIVE_BASE_CONFIG}\n  //               colorModeManager={colorModeManager}\n  //             >\n  //               <Box\n  //                 p={2}\n  //                 w=\"100%\"\n  //                 h=\"100%\"\n  //                 alignItems=\"center\"\n  //                 justifyContent=\"center\"\n  //               >\n  //                 <Chart\n  //                   data={chartData}\n  //                 />\n  //               </Box>\n  //             </NativeBaseProvider>\n  //           </View>,\n  //           document.getElementById(chartName),\n  //         )\n  //       }\n  //     })\n  //   }\n  // }, [data])\n  if (status === 'loading') {\n    return (\n      <Paper\n        flex={1}\n      >\n        <Center\n          flex={1}\n          w=\"100%\"\n        >\n          <Lottie\n            source={{\n              uri: 'https://assets5.lottiefiles.com/packages/lf20_yJ8wNO.json',\n            }}\n            style={{\n              width: '55%',\n              height: '65%',\n            }}\n            resizeMode=\"cover\"\n          />\n          <Heading\n            size=\"md\"\n            fontWeight=\"bold\"\n          >\n            We're building your charts...\n          </Heading>\n        </Center>\n      </Paper>\n    )\n  }\n  return (\n    <ScreenContainer\n      scrollable\n    >\n      <Box\n        flexDirection=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        p={3}\n      >\n        <Heading\n          size=\"lg\"\n          fontWeight=\"bold\"\n        >\n          {/* {data ? 'Results' : 'Chart Creator' } */}\n          Chart Creator\n        </Heading>\n        <HStack\n          space=\"sm\"\n          alignItems=\"center\"\n        >\n          <IconSet\n            name=\"theme-light-dark\"\n            onPress={toggleColorMode}\n          />\n\n          {\n          data\n          && (\n            false && (\n              <Button\n                onPress={onDownload}\n              >\n                Download\n              </Button>\n            )\n          )\n}\n          {\n          data\n          && (\n            (\n            <Button\n              onPress={onShare}\n            >\n              Share\n            </Button>\n            )\n          )\n}\n          {\n          data\n          && true && (\n          <Button\n            onPress={onPressUpdateData}\n          >\n            { formVisible ? 'Close Form' : 'Update Data'}\n          </Button>\n          )\n}\n          <Button\n            onPress={onCreateCharts}\n          >\n            Create Charts\n          </Button>\n        </HStack>\n      </Box>\n      <Divider w=\"100%\" />\n      {\n        !data\n          ? (\n            <>\n              <Center\n                flex={1}\n              >\n                <Lottie\n                  source={{\n                    uri: 'https://assets6.lottiefiles.com/packages/lf20_q5qeoo3q.json',\n                  }}\n                  style={{\n                    width: '65%',\n                    height: '73%',\n                  }}\n                  resizeMode=\"cover\"\n                />\n                <Heading\n                  size=\"md\"\n                  fontWeight=\"bold\"\n                >\n                  Let's Build Perfect Charts!\n                </Heading>\n              </Center>\n            </>\n          )\n          : (\n            <>\n              {/* <PresenceTransition\n                visible\n                initial={{\n                  opacity: 0,\n                  scale: 0,\n                }}\n                animate={{\n                  opacity: 1,\n                  scale: 1,\n                  transition: {\n                    duration: 1000,\n                  },\n                }}\n                style={{\n                  width: '100%',\n                  height: '90%',\n                }}\n              > */}\n              <Stack\n                direction=\"row\"\n                space={2}\n                height=\"100%\"\n              >\n                <Box\n                  flex={1}\n                >\n                  {/* <ScrollView\n                      style={{\n                        width: '100%',\n                        height: '100%',\n                      }}\n                    > */}\n\n                  <OverrideHTML\n                    data={data}\n                  />\n\n                  {/* </ScrollView> */}\n\n                  {/* <FlatList\n                      key={`FlatList:${numColumns}`}\n                      style={{\n                        flex: 1,\n                      }}\n                      nativeID=\"ChartContainer\"\n                  // extraData={[window.width]}\n                      numColumns={numColumns}\n                      data={CHART_KEYS}// CHART_KEYS}\n                      {...(\n                  numColumns > 1\n                    ? {\n                      columnWrapperStyle: {\n                        justifyContent: 'space-around',\n                      },\n                    }\n                    : {}\n                    )}\n                      renderItem={({ item: chartName }) => {\n                        const Chart = ChartExamples[chartName]\n                        return (\n                          <Box\n                            p={2}\n                            h={400}\n                            w={windowDimensions.width}\n                            alignItems=\"center\"\n                            justifyContent=\"center\"\n                            nativeID={`ChartContainer${chartName}`}\n                          >\n                            <Chart\n                              data={data[chartName]}\n                            />\n                          </Box>\n                        )\n                      }}\n                    /> */}\n                </Box>\n                {\n              formVisible && (\n                <Stack\n                  flex={1}\n                  // height={500}\n                  height=\"100%\"\n                >\n                  {/* <Form\n                    formData={data}\n                    schema={INPUT_JSON_SCHEMA}\n                    onChange={onUpdateData}\n                  /> */}\n                  <JSONEditor\n                    value={data}\n                    onChange={(value) => onUpdateData({ formData: value })}\n                  />\n                </Stack>\n              )\n            }\n              </Stack>\n\n              {/* </PresenceTransition> */}\n\n            </>\n          )\n      }\n    </ScreenContainer>\n  )\n}\n\nconst jsonToQuery = (obj: any) => {\n  const str = []\n  for (const p in obj) {\n    if (obj.hasOwnProperty(p)) {\n      str.push(`${encodeURIComponent(p)}=${encodeURIComponent(JSON.stringify(obj[p]))}`)\n    }\n  }\n  return str.join('&')\n}\n","import { StatusBar } from 'expo-status-bar'\nimport { NativeBaseProvider } from 'native-base'\nimport React from 'react'\nimport 'react-native-gesture-handler'\nimport './config'\nimport {\n  colorModeManager, NATIVE_BASE_CONFIG\n} from './config/native-base'\nimport useInitializer from './hooks/useInitializer'\nimport { HomeScreen } from './screens/HomeScreen'\n// import { ApolloProvider } from '@apollo/client'\n// import AuthDemo from '@components/Auth'\n// import { GraphqlTest } from '@components/GraphqlTest'\n// import { apolloClient } from './config/apollo'\n// import useColorScheme from './hooks/useColorScheme'\n// import Navigation from './navigation'\n\nexport default function App() {\n  const isLoadingComplete = useInitializer()\n  // const colorScheme = useColorScheme()\n\n  if (!isLoadingComplete) {\n    return null\n  }\n  return (\n  // <ApolloProvider client={apolloClient}>\n    <NativeBaseProvider\n      config={NATIVE_BASE_CONFIG}\n      colorModeManager={colorModeManager}\n    >\n      {/* <Navigation colorScheme={colorScheme} /> */}\n      {/* <Example /> */}\n      <HomeScreen />\n      {/* <GraphqlTest /> */}\n      {/* <AuthDemo /> */}\n      <StatusBar />\n    </NativeBaseProvider>\n  // </ApolloProvider>\n  )\n}\n","import { Ionicons } from '@expo/vector-icons'\nimport * as Font from 'expo-font'\nimport * as SplashScreen from 'expo-splash-screen'\nimport * as React from 'react'\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false)\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync()\n\n        // Load fonts\n        // await Font.loadAsync({\n        //   ...Ionicons.font,\n        //   'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        // });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e)\n      } finally {\n        setLoadingComplete(true)\n        SplashScreen.hideAsync()\n      }\n    }\n\n    loadResourcesAndDataAsync()\n  }, [])\n\n  return isLoadingComplete\n}\n"],"sourceRoot":""}